[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14"},{"size":500,"mtime":1608752934000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1608752934002,"results":"17","hashOfConfig":"16"},{"size":230,"mtime":1608770853174,"results":"18","hashOfConfig":"16"},{"size":8409,"mtime":1610928370068,"results":"19","hashOfConfig":"16"},{"size":890,"mtime":1610915971358,"results":"20","hashOfConfig":"16"},{"size":3369,"mtime":1610656891571,"results":"21","hashOfConfig":"16"},{"size":9220,"mtime":1610815182779,"results":"22","hashOfConfig":"16"},{"size":128,"mtime":1586701404653,"results":"23","hashOfConfig":"16"},{"size":3049,"mtime":1610916014758,"results":"24","hashOfConfig":"16"},{"size":523,"mtime":1610655055397,"results":"25","hashOfConfig":"16"},{"size":8906,"mtime":1610928086786,"results":"26","hashOfConfig":"16"},{"size":1406,"mtime":1610655153713,"results":"27","hashOfConfig":"16"},{"size":154,"mtime":1610323315030,"results":"28","hashOfConfig":"16"},{"size":154,"mtime":1610323315030,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"13roori",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["62","63"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["64","65"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["66"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",["67"],"import React, { useState } from 'react';\nimport './GameBoard.css'\n// import { StyleSheet, Text, View, FlatList, Modal } from 'react-native';\n\nimport GameSquare from './GameSquare.js'\n\nconst GameBoard = ({ \n    // meleePosition, \n    // magicPosition, \n    // healerPosition, \n    // setMeleePosition, \n    // setMagicPosition, \n    // setHealerPosition, \n    selectedCharacter, \n    currentPhase, \n    movableSquares,\n    playerCharacters,\n    setPlayerCharacters,\n    enemyCharacters }) => {\n\n\n    const fillGameBoard = () => {\n\n        // const playerPositions = [magicPosition, meleePosition, healerPosition]\n        // console.log(playerPositions);\n        \n        const gameSquares = []\n        for ( let i = 1; i < 26; i++ ) {\n            gameSquares.push(<GameSquare \n                key={i} \n                // playerPositions={playerPositions} \n                squareNumber={i} \n                selectedCharacter={selectedCharacter}\n                movableSquares={movableSquares}\n                // meleePosition={meleePosition}\n                // magicPosition={magicPosition}\n                // healerPosition={healerPosition}\n                // setMeleePosition={setMeleePosition}\n                // setMagicPosition={setMagicPosition}\n                // setHealerPosition={setHealerPosition}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                enemyCharacters={enemyCharacters}\n            />)\n        }   \n        return gameSquares  \n    }\n\n    \n\n    return (\n        <div>\n        {/* <div style={styles.container}> */}\n\n            <p>GameBoard</p>\n            {/* <div style={styles.boardContainer}> */}\n            <div className=\"board-container\">\n                {fillGameBoard()}\n            </div>\n            {/* <Modal\n                // style={{height: 50, width: 50}}\n                // animationType=\"slide\"\n                transparent={true}\n                visible={false}\n                // onRequestClose={() => {\n                // Alert.alert(\"Modal has been closed.\");\n                // }}\n            >  \n                <View style={{\n                    flex: 1,\n                    flexDirection: 'column',\n                    backgroundColor: '#00000080',\n                    justifyContent: 'center',\n                    alignItems: 'center'}}>\n                    <View style={{\n                        width: 300,\n                        height: 500,\n                        backgroundColor: '#fff', \n                        padding: 20}}>\n                            \n                        <Text>Hi</Text>\n                    \n                    </View>\n                </View> */}\n                {/* <View style={{height: 70, width:50}}>\n                    <Text>Hi</Text>\n                </View> */}\n            {/* </Modal> */}\n\n        </div>\n    )\n\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//         // flex: 1,\n        \n\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n//     boardContainer: {\n//         flexDirection: 'row',\n//         flexWrap: 'wrap',\n//         maxWidth: 425,\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n// });\n\nexport default GameBoard","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["68","69","70","71"],"import React, { useState, useEffect } from 'react';\nimport './GameSquare.css'\nimport mageImage from '../assets/mage.png'\nimport knightImage from '../assets/knight.png'\nimport healerImage from '../assets/healer.png'\nimport orcImage from '../assets/orc.png'\n\n\n// import { StyleSheet, Text, View, Dimensions, Image, Modal } from 'react-native';\n\n// import Modal from 'modal-enhanced-react-native-web';\n// import Modal from 'modal-react-native-web'\n\n\nimport boardImages from '../assets/boardImages'\n\n\n// const width = Dimensions.get('window').width\nconst width = window.innerWidth\n\n\nconst GameSquare = ({ \n    squareNumber, \n    // playerPositions, \n    movableSquares, \n    selectedCharacter,\n    // meleePosition,\n    // magicPosition,\n    // healerPosition,\n    // setMeleePosition, \n    // setMagicPosition, \n    // setHealerPosition,\n    playerCharacters,\n    setPlayerCharacters,\n    enemyCharacters }) =>{\n\n    const [ image, setImage ] = useState(null)\n    // const [ modalVisable, setModalVisable ] = useState(false)\n    const [ squareStyling, setSquareStyling ] = useState(\"\")\n\n    // const mage = {\n    //     \"image\": \"mage\",\n    //     \"maxHp\": 10,\n    //     \"currentHp\": 6,\n    //     \"baseAttack\": 8, \n    //     \"equipedWeapon\": null,\n    //     \"inventory\": null,\n    //     \"spells\": null\n    // }\n\n    \n\n    // useEffect(() => {\n    //     if (magicPosition === squareNumber) {\n    //         // setImage(mage.image)\n    //         // setImage('../assets/mage.png')\n    //         setImage(mageImage)\n    //     } else if (meleePosition === squareNumber) {\n    //         // setImage(\"knight\")\n    //         // setImage('../assets/knight.png')\n    //         setImage(knightImage)\n    //     } else if (healerPosition === squareNumber) {\n    //         setImage(healerImage) \n    //     } else {\n    //         setImage(null)\n    //     }\n\n    //     // if (squareNumber === 3){\n    //     //     setModalVisable(true)\n    //     // }\n    // }, [magicPosition, meleePosition, healerPosition])\n\n    useEffect(() => {\n        if (playerCharacters[\"magicPlayer\"][\"position\"] === squareNumber) {\n            // setImage(mage.image)\n            // setImage('../assets/mage.png')\n            setImage(mageImage)\n        } else if (playerCharacters[\"meleePlayer\"][\"position\"] === squareNumber) {\n            // setImage(\"knight\")\n            // setImage('../assets/knight.png')\n            setImage(knightImage)\n        } else if (playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber) {\n            setImage(healerImage) \n        } else {\n            setImage(null)\n        }\n        if (enemyCharacters[\"enemy1\"][\"position\"] === squareNumber){\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy2\"][\"position\"] === squareNumber){\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy3\"][\"position\"] === squareNumber){\n            setImage(orcImage)\n        } \n\n        // if (squareNumber === 3){\n        //     setModalVisable(true)\n        // }\n    }, [playerCharacters, enemyCharacters])\n    \n    // useEffect(() =>{\n    //     if (enemyCharacters[\"one\"][\"position\"] === squareNumber){\n    //         setImage(orcImage)\n    //     }\n    // }, [enemyCharacters, playerCharacters])\n\n\n    useEffect(() => {\n        let currentImage = null\n        switch (selectedCharacter) {\n            case \"meleePlayer\":\n                currentImage = knightImage\n                break\n            case \"magicPlayer\":\n                currentImage = mageImage\n                break\n            case \"healerPlayer\":\n                currentImage = healerImage\n                break\n        }\n        if (( image === null || image === currentImage ) && movableSquares.includes(squareNumber) ) {\n            setSquareStyling(\"movable\")\n        } else {\n            setSquareStyling(\"\")\n        }\n    }, [movableSquares])\n\n    const handleClickSquare = () => {\n        if ( squareStyling === \"movable\"){\n            // switch (selectedCharacter) {\n            //     case \"meleePlayer\":\n            //         setMeleePosition(squareNumber)\n            //         break\n            //     case \"magicPlayer\":\n            //         setMagicPosition(squareNumber)\n            //         break\n            //     case \"healerPlayer\":\n            //         setHealerPosition(squareNumber)\n            //         break\n            // }\n            const tempPlayerCharacters = JSON.parse(JSON.stringify(playerCharacters))\n            tempPlayerCharacters[selectedCharacter][\"position\"] = squareNumber\n            setPlayerCharacters(tempPlayerCharacters)\n        }\n    }\n    \n    if (width > 500) {\n        return (\n            <div onClick={() => handleClickSquare()} className={`bigger-square-container ${squareStyling}`}>\n                {image ? <img src={image} alt={image} className=\"game-square-image\"></img> : <p>{squareNumber}</p>}\n                {/* <p>{squareNumber}</p>\n                {image && <img src={image} alt={image} className=\"game-square-image\"></img>} */}\n\n                {/* {image && <Image\n                    style={{\n                        width: 80,\n                        height: 80,\n                        // alignSelf: \"center\",\n                        // justifyContent: \"center\"\n                        // borderRadius: 20,\n                        // marginTop: 10,\n                        // marginHorizontal: 16\n                    }}\n                    // source={require(\"../assets/knight.png\")}\n                    source={boardImages[image]}\n                    // source={{uri: animalImageURL}}\n                />} */}\n\n                {/* <Modal\n                    style={{height: 500, width: 100}}\n                    // animationType=\"slide\"\n                    // transparent={true}\n                    visible={true}\n                    // onRequestClose={() => {\n                    // Alert.alert(\"Modal has been closed.\");\n                    // }}\n                >\n                    <Text>Hi</Text>\n                </Modal> */}\n            </div>\n        )\n        \n    } else {\n        return (\n            // <div style={styles.container}>\n            <div onClick={() => handleClickSquare()} className={`smaller-square-container ${squareStyling}`}>\n\n                {/* <p>{squareNumber}</p> */}\n                {image ? <img src={image} alt={image} className=\"game-square-image\"></img> : <p>{squareNumber}</p>}\n\n                {/* {image && <Image\n                    style={{\n                        width: width/5 - 15,\n                        height: width/5 - 15,\n                        // alignSelf: \"center\",\n                        // justifyContent: \"center\"\n                        // borderRadius: 20,\n                        // marginTop: 10,\n                        // marginHorizontal: 16\n                    }}\n                    // source={require(\"../assets/knight.png\")}\n                    source={boardImages[image]}\n                    // source={{uri: animalImageURL}}\n                />} */}\n                {/* <Modal\n                // style={{height: 50, width: 50}}\n                // animationType=\"slide\"\n                transparent={true}\n                visible={false}\n                // onRequestClose={() => {\n                // Alert.alert(\"Modal has been closed.\");\n                // }}\n            >  \n                <View style={{\n                    flex: 1,\n                    flexDirection: 'column',\n                    // backgroundColor: '#00000080',\n                    backgroundColor: 'rgba(80,80,80,0.09)',\n                    justifyContent: 'center',\n                    alignItems: 'center'}}>\n                    <View style={{\n                        width: 300,\n                        height: 500,\n                        backgroundColor: '#fff', \n                        padding: 20}}>\n                            \n                    <Text>Hi {console.log(\"in modal\", modalVisable + \" \" + squareNumber)\n                    }</Text>\n                    \n                    </View>\n                </View> */}\n                {/* <View style={{height: 70, width:50}}>\n                    <Text>Hi</Text>\n                </View> */}\n            {/* </Modal> */}\n{/* <Modal\n                    style={{height: 50, width: 10}}\n                    // animationType=\"slide\"\n                    // transparent={true}\n                    visible={false}\n                    // onRequestClose={() => {\n                    // Alert.alert(\"Modal has been closed.\");\n                    // }}\n                >\n                    <Text>Hi</Text>\n                </Modal> */}\n            </div>\n        )\n    }\n\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//         // flex: 1,\n//     //   border: '1 solid black',\n//         // borderColor: 'black',\n//         borderWidth: 1,\n//         // borderStyle: 'solid',\n//         width: width/5 - 15,\n//         height: width/5 - 15\n\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n//     biggerContainer: {\n//         borderWidth: 1,\n//         width: 85,\n//         height: 85,\n\n//     },\n//   });\n\nexport default GameSquare\n\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",["72","73"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",["74"],"import Character from './Character.js'\n\nfunction MeleePlayer(name, attackPoints, healthPoints, position, type) {\n    Character.call(this, name, attackPoints, healthPoints, position)\n    this.type = type\n    this.equipedWeapon  = null\n    this.weapons = []\n    this.ultimateCharge = 0\n\n    // this.statusEffects = []\n}\n\nMeleePlayer.prototype = Object.create(Character.prototype);\nObject.defineProperty(MeleePlayer.prototype, 'constructor', { \n    value: MeleePlayer, \n    enumerable: false, // so that it does not appear in 'for in' loop\n    writable: true \n});\n\nMeleePlayer.prototype.attack = function (enemy){\n    let damageDone = this.attackPoints\n    const startingHealth = enemy.healthPoints;\n\n    if(this.equipedWeapon) {\n        damageDone += this.equipedWeapon.attackPower\n        const randomNumber = Math.floor(Math.random() * 100) + 1\n        switch(this.equipedWeapon.type){\n            case(\"sword\"):\n                if(randomNumber <= 25) damageDone *= 2\n                break\n            case(\"axe\"):\n                if(randomNumber <= 10) damageDone = startingHealth\n                else if(randomNumber <= 20) enemy.statusEffects.push(\"attack down\")\n                break\n            case(\"club\"):\n                if(randomNumber <= 25) enemy.statusEffects.push(\"stun\")\n                break\n        }\n    }\n    enemy.healthPoints = startingHealth - damageDone\n}\n\nexport default MeleePlayer","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":18,"column":15,"nodeType":"81","messageId":"82","endLine":18,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":81,"column":8,"nodeType":"85","endLine":81,"endColumn":28,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"88","line":15,"column":8,"nodeType":"81","messageId":"82","endLine":15,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":98,"column":8,"nodeType":"85","endLine":98,"endColumn":43,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":109,"column":9,"nodeType":"93","messageId":"94","endLine":119,"endColumn":10},{"ruleId":"83","severity":1,"message":"95","line":125,"column":8,"nodeType":"85","endLine":125,"endColumn":24,"suggestions":"96"},{"ruleId":"79","severity":1,"message":"97","line":128,"column":15,"nodeType":"81","messageId":"82","endLine":128,"endColumn":36},{"ruleId":"79","severity":1,"message":"98","line":178,"column":13,"nodeType":"81","messageId":"82","endLine":178,"endColumn":45},{"ruleId":"91","severity":1,"message":"92","line":27,"column":9,"nodeType":"93","messageId":"94","endLine":38,"endColumn":10},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'bob' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'useState' is defined but never used.","'boardImages' is defined but never used.","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["102"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["103"],"'numberOfMovesRequired' is assigned a value but never used.","'indexOfClosestAttackablePosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [enemy1, enemy2, enemy3, enemyCharacters, enemyMovementPhase, playerCharacters]",{"range":"110","text":"111"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"112","text":"113"},"Update the dependencies array to be: [image, movableSquares, selectedCharacter, squareNumber]",{"range":"114","text":"115"},[3183,3203],"[enemy1, enemy2, enemy3, enemyCharacters, enemyMovementPhase, playerCharacters]",[3014,3049],"[playerCharacters, enemyCharacters, squareNumber]",[3845,3861],"[image, movableSquares, selectedCharacter, squareNumber]"]