[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js":"15","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js":"16","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js":"17","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js":"18","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js":"19","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js":"20","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js":"21","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js":"22"},{"size":500,"mtime":1608752934000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1608752934002,"results":"25","hashOfConfig":"24"},{"size":230,"mtime":1608770853174,"results":"26","hashOfConfig":"24"},{"size":9547,"mtime":1612887281286,"results":"27","hashOfConfig":"24"},{"size":3877,"mtime":1612820758900,"results":"28","hashOfConfig":"24"},{"size":1671,"mtime":1612830914442,"results":"29","hashOfConfig":"24"},{"size":8030,"mtime":1612840015707,"results":"30","hashOfConfig":"24"},{"size":128,"mtime":1586701404653,"results":"31","hashOfConfig":"24"},{"size":1436,"mtime":1611419845025,"results":"32","hashOfConfig":"24"},{"size":5684,"mtime":1612838676227,"results":"33","hashOfConfig":"24"},{"size":12773,"mtime":1612887921401,"results":"34","hashOfConfig":"24"},{"size":2710,"mtime":1612840970099,"results":"35","hashOfConfig":"24"},{"size":154,"mtime":1610323315030,"results":"36","hashOfConfig":"24"},{"size":1046,"mtime":1612485191997,"results":"37","hashOfConfig":"24"},{"size":5614,"mtime":1612378726965,"results":"38","hashOfConfig":"24"},{"size":1606,"mtime":1612822003127,"results":"39","hashOfConfig":"24"},{"size":166,"mtime":1611517570117,"results":"40","hashOfConfig":"24"},{"size":277,"mtime":1612483278790,"results":"41","hashOfConfig":"24"},{"size":1142,"mtime":1612838501629,"results":"42","hashOfConfig":"24"},{"size":2878,"mtime":1612838504579,"results":"43","hashOfConfig":"24"},{"size":4360,"mtime":1612483278790,"results":"44","hashOfConfig":"24"},{"size":209,"mtime":1612483278790,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13roori",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["96","97"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["98","99"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["100","101"],"import React, { useState, useEffect, useRef } from 'react';\nimport './GameActionBar.css'\nimport CharacterTurnSelect from './CharacterTurnSelect.js'\nimport MovementPhase from './MovementPhase.js'\nimport AttackPhase from './AttackPhase.js'\n\n\nconst GameActionBar = ( { \n    selectedCharacter,\n    setSelectedCharacter, \n    currentPhase, \n    setCurrentPhase, \n    calculateMovementLocations, \n    calculateAttackLocations,\n    setMovableSquares, \n    setAttackableSquares,\n    playerCharacters, \n    setPlayerCharacters,\n    // enemyMovementPhase,\n    setEnemyMovementPhase,\n    usedCharacters,\n    setUsedCharacters} ) =>{\n\n    // testing\n    const testBox = useRef()\n    const test = () => {\n        const element = document.getElementById(\"testBox\")\n        element.classList.toggle(\"transform\")\n        // element.classList.add(\"transform\")\n        \n        testBox.current.classList.toggle(\"transform\")\n        testBox.current.classList.toggle(\"right\")\n        console.log(testBox)\n        // Both of the above do the same thing BUT using REF is the correct react way of doing it\n    }\n    // end of testing\n\n    const startingPosition = useRef(null)\n    // this didnt need to be useRef, also work with state\n    // const [ startingPosition, setStartingPosition ] = useState(null)\n\n    useEffect(() =>{\n        if(selectedCharacter) startingPosition.current = playerCharacters[selectedCharacter][\"position\"]\n    }, [selectedCharacter])\n\n    return (\n        <div>\n            <p>GameActionBar</p>\n            {currentPhase === \"characterTurnSelect\" && <CharacterTurnSelect\n                playerCharacters={playerCharacters} \n                setSelectedCharacter={setSelectedCharacter}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n            />}\n            {currentPhase === \"playerMovement\" && <MovementPhase \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter}\n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n                setMovableSquares={setMovableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                setEnemyMovementPhase={setEnemyMovementPhase}\n                calculateAttackLocations={calculateAttackLocations}\n                startingPosition={startingPosition}\n            />}\n            {currentPhase === \"enemyMovement\" && \n                <div>\n                    <h1>Enemy Movement Phase</h1>\n                    <p>Please Wait...</p>\n                </div>\n            }\n            {currentPhase === \"playerAttack\" && <AttackPhase \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter}\n                setCurrentPhase={setCurrentPhase}\n                calculateAttackLocations={calculateAttackLocations}\n                calculateMovementLocations={calculateMovementLocations}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                setAttackableSquares={setAttackableSquares}\n                startingPosition={startingPosition}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n            />}\n\n            {/* testing  */}\n            <div id=\"testBox\" className=\"box transform\" onClick={() => test()}></div>\n            <div className=\"box\" ref={testBox} onClick={() => test()}></div>\n            <input type=\"button\" id=\"button\" value=\"Click Me\" onClick={() => test()}></input>\n            {/* end of testing  */}\n\n        </div>\n    )\n}\n\n\nexport default GameActionBar","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",["102"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["103","104","105","106","107"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],["108","109"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",["110","111","112"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",["113"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",["114"],"function MeleeWeapon(name, attackPower, type, effectName, activationChance){\n    this.name = name\n    this.attackPower = attackPower\n    this.type = type\n\n    let defaultEffect = null\n    let defaultActivationChance = null\n    let defaultDuration = null\n    switch (this.type) {\n        case \"axe\":\n            const randomNumber = Math.floor(Math.random() * 4)\n            randomNumber === 0 ? defaultEffect = \"instant kill\" : defaultEffect = \"attack down\"\n            defaultActivationChance = 20\n            defaultDuration = 10\n            break\n        case \"club\":\n            defaultEffect = \"stun\"\n            defaultActivationChance = 25\n            defaultDuration = 1\n            break\n        case \"sword\":\n            defaultEffect = \"pierce\"\n            defaultActivationChance = 25\n            defaultDuration = 0\n            break\n    }\n    \n    this.effectName = effectName || defaultEffect\n    this.activationChance = activationChance || defaultActivationChance\n    this.duration = defaultDuration\n\n}\n\nexport default MeleeWeapon","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js",["115","116","117","118","119","120","121"],"import React, { useState } from 'react';\nimport './AttackPhase.css'\nimport EquipModal from './EquipModal.js'\nimport ReactDOM from 'react-dom'\nimport Modal from 'react-modal'\n// import swordImage from '../assets/sword.png'\n// import WeaponImages from '../assets/WeaponImages.js'\n\nconst AttackPhase = ({ \n    selectedCharacter,\n    setSelectedCharacter, \n    setCurrentPhase, \n    calculateAttackLocations, \n    calculateMovementLocations,\n    setAttackableSquares,\n    playerCharacters, \n    setPlayerCharacters,\n    setEnemyMovementPhase,\n    startingPosition,\n    usedCharacters,\n    setUsedCharacters }) =>{\n\n    const [ weaponChangeModalIsOpen, setWeaponChangeModalIsOpen ] = useState(false)\n    const [ equipModalIsOpen, setEquipModalIsOpen ] = useState(false)\n\n    const [ equippedWeapon, setEquippedWeapon ] = useState(playerCharacters[selectedCharacter].equippedWeapon)\n\n    const handleFinishedCharacterAttack = () => {\n        setAttackableSquares([])\n        setCurrentPhase(\"characterTurnSelect\")\n        const updatedUsedCharacters = [...usedCharacters, selectedCharacter]\n        setUsedCharacters(updatedUsedCharacters)\n    }\n\n    const handleCancel = () => {\n        setCurrentPhase(\"playerMovement\")\n        calculateMovementLocations(startingPosition.current, 2)\n        setAttackableSquares([])\n    }\n\n    const handleChangeEquipped = () => {\n        // setWeaponChangeModalIsOpen(true)\n        setEquipModalIsOpen(true)\n    }\n\n\n    const displayWeaponInventory = () => {\n        const weapons = playerCharacters[selectedCharacter].weapons\n        const displayWeaponOptions = weapons.map(weapon => {\n            let equippedStyle = false\n            if(playerCharacters[selectedCharacter].equippedWeapon && playerCharacters[selectedCharacter].equippedWeapon.name === weapon.name) equippedStyle = true\n            return (\n                <div className={equippedStyle ? \"weapon-select-modal-weapon equippedStyle\" : \"weapon-select-modal-weapon\"} onClick={() => handleEquipWeapon(weapon)}>\n                    {/* <img src={swordImage} alt='sword' className=\"weapon-select-modal-image\"></img>  */}\n                    {/* <img src={WeaponImages[weapon.name].default} alt='sword' className=\"weapon-select-modal-image\"></img>  */}\n                    <p>{weapon.name}</p>\n                    <img src={require('../assets/' + weapon.name + '.png').default} alt={weapon.name} className=\"weapon-select-modal-image\"></img> \n                    <p>Damage: {weapon.attackPower}</p>\n                    {/* <button onClick={() => handleEquipWeapon(weapon)}>Equip</button> */}\n                </div>\n            )\n        })\n        return displayWeaponOptions\n    }\n\n    const handleEquipWeapon = (weapon) => {\n        const updateableCharacter = playerCharacters[selectedCharacter]\n        updateableCharacter.equippedWeapon = weapon\n        setPlayerCharacters(prevState => ({...prevState, [selectedCharacter]: updateableCharacter }))\n    }\n\n    return (\n        <div>\n            <p>Attack Phase</p>\n                <div>\n                    <p>Currently Attacking with {playerCharacters[selectedCharacter].type}</p> \n                    <button onClick={() => handleFinishedCharacterAttack()}>End {playerCharacters[selectedCharacter].type}'s turn without attacking </button>\n                    {selectedCharacter === \"meleePlayer\" && <button onClick={() => handleChangeEquipped()}>Change Equipped Weapon</button>}\n                    {selectedCharacter === \"magicPlayer\" && <button onClick={() => handleChangeEquipped()}>Change Equipped Spell</button>}\n                    {selectedCharacter === \"healerPlayer\" && <button onClick={() => handleChangeEquipped()}>Change Equipped Heal</button>}\n                    <button onClick={() => handleCancel()}>Back</button>\n                    <p>After finishing movement for this character it cannot be moved again until next movement phase, canceling doesn't use characters movement for this turn</p>\n                </div>\n            {console.log(\"equipmentType111111\", selectedCharacter)}\n\n                {selectedCharacter && <EquipModal \n                    equipModalIsOpen={equipModalIsOpen} \n                    setEquipModalIsOpen={setEquipModalIsOpen}\n                    playerCharacters={playerCharacters}\n                    setPlayerCharacters={setPlayerCharacters}\n                    selectedCharacter={selectedCharacter}\n                />}\n\n\n\n                {/* {selectedCharacter === \"meleePlayer\" && <Modal\n                className=\"weapon-select-modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={weaponChangeModalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n                >\n                <p>Change Weapon</p>\n                {playerCharacters[selectedCharacter].equippedWeapon ? \n                    <p>Currently Equipped weapon {playerCharacters[selectedCharacter].equippedWeapon.name}</p>\n                :\n                    <p>No Weapon Currently Equipped</p>\n                }\n                <div className=\"weapon-select-modal-weapons-container\">\n                    {displayWeaponInventory()}\n                </div>\n                <button className=\"weapon-select-modal-button\" onClick={() => handleEquipWeapon(null)}>Unequip Weapon</button>\n                <button className=\"weapon-select-modal-button\" onClick={() => setWeaponChangeModalIsOpen(false)}>Confirm</button>\n            </Modal>} */}\n        </div>\n    )\n\n}\n\nexport default AttackPhase","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js",["122"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js",["123"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js",["124","125"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js",["126","127","128"],"import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport Modal from 'react-modal'\n\nimport './AttackPhase.css'\n\n\n    \n    \nconst EquipModal = ({\n    equipModalIsOpen, \n    setEquipModalIsOpen, \n    playerCharacters,\n    setPlayerCharacters,\n    selectedCharacter}) => {\n\n    // const [ equipmentType, setEquipmentType ] = useState(\"\")\n    // useEffect(() =>{\n    //     console.log(\"selectedCharacter\", selectedCharacter);\n    //     if(selectedCharacter === \"meleePlayer\") setEquipmentType(\"Weapon\")\n    //     else if(selectedCharacter === \"magicPlayer\") setEquipmentType(\"Spell\")\n    //     else if(selectedCharacter === \"healerPlayer\") setEquipmentType(\"Heal\")\n    // }, selectedCharacter)\n\n\n    let equipmentType = \"\"\n    if(selectedCharacter === \"meleePlayer\") equipmentType = \"Weapon\"\n    else if(selectedCharacter === \"magicPlayer\") equipmentType= \"Spell\"\n    else if(selectedCharacter === \"healerPlayer\") equipmentType = \"Heal\"\n\n\n    const displayItemsInventory = () => {\n        let itemType = \"\"\n        if(selectedCharacter === \"meleePlayer\") itemType = \"weapons\"\n        else if(selectedCharacter === \"magicPlayer\") itemType= \"spells\"\n        else if(selectedCharacter === \"healerPlayer\") itemType = \"heals\"\n\n        const items = playerCharacters[selectedCharacter][itemType]\n        const displayItemOptions = items.map(item => {\n            let equippedStyle = false\n            if(playerCharacters[selectedCharacter][\"equipped\" + equipmentType] && playerCharacters[selectedCharacter][\"equipped\" + equipmentType].name === item.name) equippedStyle = true\n            return (\n                <div className={equippedStyle ? \"weapon-select-modal-weapon equippedStyle\" : \"weapon-select-modal-weapon\"} onClick={() => handleEquipItem(item)}>\n                    {/* <img src={swordImage} alt='sword' className=\"weapon-select-modal-image\"></img>  */}\n                    {/* <img src={WeaponImages[weapon.name].default} alt='sword' className=\"weapon-select-modal-image\"></img>  */}\n                    <p>{item.name}</p>\n                    <img src={require('../assets/' + item.name + '.png').default} alt={item.name} className=\"weapon-select-modal-image\"></img> \n                    { itemType === \"weapons\" && <p>Damage: {item.attackPower}</p>}\n                    { itemType === \"spells\" && <p>Damage: {item.spellPower}</p>}\n                    { itemType === \"spells\" && <p>Effect: {item.effectName} with {item.activationChance}% chance for {item.duration} turns</p>}\n                    {/* { itemType === \"heals\" && <p>Damage: {item.attackPower}</p>} */}\n                    {/* <button onClick={() => handleEquipItem(item)}>Equip</button> */}\n                </div>\n            )\n        })\n        return displayItemOptions\n    }\n\n    const handleEquipItem = (item) => {\n        const updateableCharacter = playerCharacters[selectedCharacter]\n        updateableCharacter[\"equipped\" + equipmentType] = item\n        setPlayerCharacters(prevState => ({...prevState, [selectedCharacter]: updateableCharacter }))\n    }\n    \n    return (\n        <>\n            {console.log(\"equipmentType\", selectedCharacter)}\n            {equipmentType && <Modal\n                className=\"weapon-select-modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={equipModalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n                >\n                <p>Change {equipmentType}</p>\n                {playerCharacters[selectedCharacter][\"equipped\" + equipmentType] ? \n                    <p>Currently Equipped {equipmentType} {playerCharacters[selectedCharacter][\"equipped\" + equipmentType].name}</p>\n                :\n                    <p>No {equipmentType} Currently Equipped</p>\n                }\n                <div className=\"weapon-select-modal-weapons-container\">\n                    {displayItemsInventory()}\n                </div>\n                <button className=\"weapon-select-modal-button\" onClick={() => handleEquipItem(null)}>Unequip {equipmentType}</button>\n                <button className=\"weapon-select-modal-button\" onClick={() => setEquipModalIsOpen(false)}>Confirm</button>\n            </Modal>}\n        </>\n    )\n}\n\nexport default EquipModal","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":102,"column":8,"nodeType":"139","endLine":102,"endColumn":22,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"142","line":44,"column":8,"nodeType":"139","endLine":44,"endColumn":27,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"141","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"144","line":1,"column":38,"nodeType":"135","messageId":"136","endLine":1,"endColumn":44},{"ruleId":"133","severity":1,"message":"134","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"145","line":76,"column":8,"nodeType":"139","endLine":76,"endColumn":43,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":80,"column":9,"nodeType":"149","messageId":"150","endLine":90,"endColumn":10},{"ruleId":"137","severity":1,"message":"151","line":123,"column":8,"nodeType":"139","endLine":123,"endColumn":75,"suggestions":"152"},{"ruleId":"129","replacedBy":"153"},{"ruleId":"131","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":101,"column":74,"nodeType":"157","messageId":"158","endLine":101,"endColumn":110,"fix":"159"},{"ruleId":"155","severity":1,"message":"160","line":116,"column":74,"nodeType":"157","messageId":"158","endLine":116,"endColumn":110,"fix":"161"},{"ruleId":"155","severity":1,"message":"162","line":130,"column":74,"nodeType":"157","messageId":"158","endLine":130,"endColumn":111,"fix":"163"},{"ruleId":"147","severity":1,"message":"148","line":29,"column":9,"nodeType":"149","messageId":"150","endLine":42,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":9,"column":5,"nodeType":"149","messageId":"150","endLine":26,"endColumn":6},{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":16},{"ruleId":"133","severity":1,"message":"164","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":13},{"ruleId":"133","severity":1,"message":"165","line":23,"column":13,"nodeType":"135","messageId":"136","endLine":23,"endColumn":36},{"ruleId":"133","severity":1,"message":"166","line":23,"column":38,"nodeType":"135","messageId":"136","endLine":23,"endColumn":64},{"ruleId":"133","severity":1,"message":"167","line":26,"column":13,"nodeType":"135","messageId":"136","endLine":26,"endColumn":27},{"ruleId":"133","severity":1,"message":"168","line":26,"column":29,"nodeType":"135","messageId":"136","endLine":26,"endColumn":46},{"ruleId":"133","severity":1,"message":"169","line":47,"column":11,"nodeType":"135","messageId":"136","endLine":47,"endColumn":33},{"ruleId":"133","severity":1,"message":"141","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"170","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":27},{"ruleId":"133","severity":1,"message":"171","line":24,"column":11,"nodeType":"135","messageId":"136","endLine":24,"endColumn":25},{"ruleId":"133","severity":1,"message":"172","line":41,"column":7,"nodeType":"135","messageId":"136","endLine":41,"endColumn":26},{"ruleId":"133","severity":1,"message":"141","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"173","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'playerCharacters'. Either include it or remove the dependency array.",["177"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["178"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'enemyCharacters', 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["179"],["174"],["175"],"no-useless-computed-key","Unnecessarily computed property [\"meleePlayer\"] found.","Property","unnecessarilyComputedProperty",{"range":"180","text":"181"},"Unnecessarily computed property [\"magicPlayer\"] found.",{"range":"182","text":"183"},"Unnecessarily computed property [\"healerPlayer\"] found.",{"range":"184","text":"185"},"'Modal' is defined but never used.","'weaponChangeModalIsOpen' is assigned a value but never used.","'setWeaponChangeModalIsOpen' is assigned a value but never used.","'equippedWeapon' is assigned a value but never used.","'setEquippedWeapon' is assigned a value but never used.","'displayWeaponInventory' is assigned a value but never used.","'CharacterTurnSelect' is defined but never used.","'startingHealth' is assigned a value but never used.","'updateStatusEffects' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},[5626,5641],"\"meleePlayer\"",[6613,6628],"\"magicPlayer\"",[7610,7626],"\"healerPlayer\"","Update the dependencies array to be: [currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",{"range":"194","text":"195"},"Update the dependencies array to be: [playerCharacters, selectedCharacter]",{"range":"196","text":"197"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"198","text":"199"},"Update the dependencies array to be: [movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]",{"range":"200","text":"201"},[4072,4086],"[currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",[1418,1437],"[playerCharacters, selectedCharacter]",[2617,2652],"[playerCharacters, enemyCharacters, squareNumber]",[5023,5090],"[movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]"]