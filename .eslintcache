[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js":"15","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js":"16"},{"size":500,"mtime":1608752934000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608752934002,"results":"19","hashOfConfig":"18"},{"size":230,"mtime":1608770853174,"results":"20","hashOfConfig":"18"},{"size":7818,"mtime":1611450157445,"results":"21","hashOfConfig":"18"},{"size":3823,"mtime":1611418471461,"results":"22","hashOfConfig":"18"},{"size":1537,"mtime":1611418197822,"results":"23","hashOfConfig":"18"},{"size":5415,"mtime":1611419582220,"results":"24","hashOfConfig":"18"},{"size":128,"mtime":1586701404653,"results":"25","hashOfConfig":"18"},{"size":1436,"mtime":1611419845025,"results":"26","hashOfConfig":"18"},{"size":554,"mtime":1611425558124,"results":"27","hashOfConfig":"18"},{"size":9559,"mtime":1611450724658,"results":"28","hashOfConfig":"18"},{"size":1406,"mtime":1610655153713,"results":"29","hashOfConfig":"18"},{"size":154,"mtime":1610323315030,"results":"30","hashOfConfig":"18"},{"size":154,"mtime":1610323315030,"results":"31","hashOfConfig":"18"},{"size":1809,"mtime":1611418070572,"results":"32","hashOfConfig":"18"},{"size":1070,"mtime":1611350806877,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13roori",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["70","71"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["72","73"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["74","75"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",["76"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["77","78","79","80","81"],"import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom'\nimport Modal from 'react-modal'\nimport './GameSquare.css'\nimport mageImage from '../assets/mage.png'\nimport knightImage from '../assets/knight.png'\nimport healerImage from '../assets/healer.png'\nimport orcImage from '../assets/orc.png'\n\n// import boardImages from '../assets/boardImages'\n\nconst width = window.innerWidth\n\n\nconst GameSquare = ({ \n    squareNumber, \n    setCurrentPhase,\n    movableSquares, \n    attackableSquares,\n    selectedCharacter,\n    playerCharacters,\n    setPlayerCharacters,\n    enemyCharacters,\n    handleImageClick,\n    usedCharacters,\n    setUsedCharacters,\n    setAttackableSquares\n }) =>{\n\n    const [ image, setImage ] = useState(null)\n    const [ squareStyling, setSquareStyling ] = useState(\"\")\n    const [ character, setCharacter ] = useState(null)\n    const [ modalIsOpen, setModalIsOpen ] = useState(false)\n\n//test!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // const [ fing, setFing ] = useState(\"meleePlayer\")\n    // const meleeRef = useRef()\n    // const magicRef = useRef()\n    // const healerRef = useRef()\n    // const characterRef = useRef()\n\n    // const handleImageClick = (character) => {\n    //     meleeRef.current.classList.add(\"blah\")\n    // }\n\n    // let makeRef = meleeRef\n//test end here!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    useEffect(() => {\n        if (playerCharacters[\"magicPlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"magicPlayer\"])\n            setImage(mageImage)\n        } else if (playerCharacters[\"meleePlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"meleePlayer\"])\n            setImage(knightImage)\n        } else if (playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"healerPlayer\"])\n            setImage(healerImage) \n        } else {\n            setImage(null)\n        }\n        if (enemyCharacters[\"enemy1\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy1\"])\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy2\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy2\"])\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy3\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy3\"])\n            setImage(orcImage)\n        } \n    }, [playerCharacters, enemyCharacters])\n\n    useEffect(() => {\n        let currentImage = null\n        switch (selectedCharacter) {\n            case \"meleePlayer\":\n                currentImage = knightImage\n                break\n            case \"magicPlayer\":\n                currentImage = mageImage\n                break\n            case \"healerPlayer\":\n                currentImage = healerImage\n                break\n        }\n        if (( image === null || image === currentImage ) && movableSquares.includes(squareNumber) ) {\n            setSquareStyling(\"movable\")\n        } else if (attackableSquares.includes(squareNumber)) {\n            setSquareStyling(\"attackable\")\n        } else {\n            setSquareStyling(\"\")\n        }\n    }, [movableSquares, attackableSquares])\n\n    const handleClickSquare = () => {\n        if ( squareStyling === \"movable\"){\n            const updateableCharacter = playerCharacters[selectedCharacter]\n            updateableCharacter.position = squareNumber\n            setPlayerCharacters(prevState => ({...prevState, [selectedCharacter]: updateableCharacter }))\n\n        } else if ( squareStyling === \"attackable\" && image !== null) {\n            setModalIsOpen(true)\n        }\n    }\n\n    const handleModalAttack = () => {\n        setModalIsOpen(false)\n        playerCharacters[selectedCharacter].attack(character)\n        setCurrentPhase(\"characterTurnSelect\")\n        const updatedUsedCharacters = [...usedCharacters, selectedCharacter]\n        setUsedCharacters(updatedUsedCharacters)\n        setAttackableSquares([])\n    }\n\n\n    return (\n        <>\n            <div onClick={() => handleClickSquare()} className={width > 500 ? `bigger-square-container ${squareStyling}` : `smaller-square-container ${squareStyling}` }>\n                {image ? \n                    <img src={image} alt={image} className=\"game-square-image\" onClick={() => handleImageClick(character)}></img> \n                : \n                    <p>{squareNumber}</p>\n                    // <p></p>\n                }\n            </div>\n            {character && selectedCharacter && <Modal\n                className=\"modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={modalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n                >\n                <p>Attack {character.name} with {playerCharacters[selectedCharacter].type}?</p>\n                {selectedCharacter === \"meleePlayer\" && <p>Current equiped Weapon is {playerCharacters[selectedCharacter].equipedWeapon.name}</p>}\n                <p>This will end this characters turn</p>\n                <button onClick={() => handleModalAttack()}>Yes</button>\n                <button onClick={() => setModalIsOpen(false)}>No</button>\n            </Modal>}\n        </>\n    )\n}\n\nexport default GameSquare\n\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",["82"],"import Character from './Character.js'\n\nfunction MeleePlayer(name, attackPoints, healthPoints, position, type) {\n    Character.call(this, name, attackPoints, healthPoints, position)\n    this.type = type\n    this.equipedWeapon  = null\n    this.weapons = []\n    this.ultimateCharge = 0\n\n    // this.statusEffects = []\n}\n\nMeleePlayer.prototype = Object.create(Character.prototype);\nObject.defineProperty(MeleePlayer.prototype, 'constructor', { \n    value: MeleePlayer, \n    enumerable: false, // so that it does not appear in 'for in' loop\n    writable: true \n});\n\nMeleePlayer.prototype.attack = function (enemy){\n    let damageDone = this.attackPoints\n    const startingHealth = enemy.healthPoints;\n\n    if(this.equipedWeapon) {\n        damageDone += this.equipedWeapon.attackPower\n        const randomNumber = Math.floor(Math.random() * 100) + 1\n        switch(this.equipedWeapon.type){\n            case(\"sword\"):\n                if(randomNumber <= 25) damageDone *= 2\n                break\n            case(\"axe\"):\n                if(randomNumber <= 10) damageDone = startingHealth\n                else if(randomNumber <= 20) enemy.statusEffects.push(\"attack down\")\n                break\n            case(\"club\"):\n                if(randomNumber <= 25) enemy.statusEffects.push(\"stun\")\n                break\n        }\n    }\n    enemy.healthPoints = startingHealth - damageDone\n}\n\nexport default MeleePlayer","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js",["83"],"import React, { useState } from 'react';\n\nconst CharacterTurnSelect = ({\n    playerCharacters,\n    setSelectedCharacter,\n    usedCharacters,\n    setCurrentPhase,\n    calculateMovementLocations }) => {\n\n\n    const handleSelectCharacter = (character) => {\n        setSelectedCharacter(character)\n        calculateMovementLocations(playerCharacters[character].position, 2)\n        setCurrentPhase(\"playerMovement\")\n    }\n\n    return (\n        <div>\n            <p>Select a character to control...</p>\n            <button disabled={usedCharacters.includes(\"meleePlayer\")} onClick={() => handleSelectCharacter(\"meleePlayer\")}>Knight</button>\n            <button disabled={usedCharacters.includes(\"magicPlayer\")} onClick={() => handleSelectCharacter(\"magicPlayer\")}>Mage</button>\n            <button disabled={usedCharacters.includes(\"healerPlayer\")} onClick={() => handleSelectCharacter(\"healerPlayer\")}>Healer</button>\n            {/* <button onClick={() => handleEndMovementPhase()}>End Movement Phase</button> */}\n        </div>\n    )\n}\n\nexport default CharacterTurnSelect",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":77,"column":8,"nodeType":"94","endLine":77,"endColumn":22,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"96","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":44,"column":8,"nodeType":"94","endLine":44,"endColumn":27,"suggestions":"98"},{"ruleId":"88","severity":1,"message":"96","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"99","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"100","line":72,"column":8,"nodeType":"94","endLine":72,"endColumn":43,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":76,"column":9,"nodeType":"104","messageId":"105","endLine":86,"endColumn":10},{"ruleId":"92","severity":1,"message":"106","line":94,"column":8,"nodeType":"94","endLine":94,"endColumn":43,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"103","line":27,"column":9,"nodeType":"104","messageId":"105","endLine":38,"endColumn":10},{"ruleId":"88","severity":1,"message":"96","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["110"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'playerCharacters'. Either include it or remove the dependency array.",["111"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["112"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",{"range":"122","text":"123"},"Update the dependencies array to be: [playerCharacters, selectedCharacter]",{"range":"124","text":"125"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"126","text":"127"},"Update the dependencies array to be: [movableSquares, attackableSquares, selectedCharacter, image, squareNumber]",{"range":"128","text":"129"},[2841,2855],"[currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",[1418,1437],"[playerCharacters, selectedCharacter]",[2479,2514],"[playerCharacters, enemyCharacters, squareNumber]",[3223,3258],"[movableSquares, attackableSquares, selectedCharacter, image, squareNumber]"]