[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js":"15","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js":"16","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js":"17"},{"size":500,"mtime":1608752934000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608752934002,"results":"20","hashOfConfig":"19"},{"size":230,"mtime":1608770853174,"results":"21","hashOfConfig":"19"},{"size":8141,"mtime":1611505163190,"results":"22","hashOfConfig":"19"},{"size":3823,"mtime":1611418471461,"results":"23","hashOfConfig":"19"},{"size":1462,"mtime":1611506209102,"results":"24","hashOfConfig":"19"},{"size":5468,"mtime":1611505555569,"results":"25","hashOfConfig":"19"},{"size":128,"mtime":1586701404653,"results":"26","hashOfConfig":"19"},{"size":1436,"mtime":1611419845025,"results":"27","hashOfConfig":"19"},{"size":554,"mtime":1611425558124,"results":"28","hashOfConfig":"19"},{"size":9559,"mtime":1611450724658,"results":"29","hashOfConfig":"19"},{"size":1406,"mtime":1610655153713,"results":"30","hashOfConfig":"19"},{"size":154,"mtime":1610323315030,"results":"31","hashOfConfig":"19"},{"size":154,"mtime":1610323315030,"results":"32","hashOfConfig":"19"},{"size":4933,"mtime":1611529351641,"results":"33","hashOfConfig":"19"},{"size":1070,"mtime":1611350806877,"results":"34","hashOfConfig":"19"},{"size":166,"mtime":1611517570117,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"13roori",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["74","75"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["76","77"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Modal from 'react-modal'\n\nimport './GameScreen.css'\nimport GameBoard from '../components/GameBoard'\nimport GameActionBar from '../components/GameActionBar'\n\nimport MeleePlayer from '../models/MeleePlayer.js'\nimport MagicPlayer from '../models/MeleePlayer.js'\nimport HealerPlayer from '../models/MeleePlayer.js'\nimport MeleeWeapon from '../models/MeleeWeapon.js'\nimport Enemy from '../models/Enemy.js'\n\nconst boardWidth = 5\nconst boardHeight = 5\n\nconst GameScreen = () =>{\n\n    const ken = new MeleePlayer(\"ken\", 30, 100, 11, \"Knight\")\n    const matt = new MagicPlayer(\"matt\", 20, 100, 6, \"mage\")\n    const peter = new HealerPlayer(\"peter\", 10, 100, 16, \"priest\")\n    const sword = new MeleeWeapon(\"sword-5\", 5, \"sword\")\n    const club = new MeleeWeapon(\"club-6\", 6, \"club\")\n    const axe = new MeleeWeapon(\"axe-4\", 4, \"axe\")\n    // ken.weapons = ken.weapons.push(sword)\n    // ken.weapons = ken.weapons.push(club)\n    // ken.weapons = ken.weapons.push(axe)\n    ken.weapons.push(sword)\n    ken.weapons.push(club)\n    ken.weapons.push(axe)\n    // ken.equipedWeapon = sword\n\n    let startingPlayerCharacters = {\n        meleePlayer: ken,\n        magicPlayer: matt,\n        healerPlayer: peter\n    }\n\n    const enemy1 = new Enemy(\"enemy1\", 1, 100, 10)\n    const enemy2 = new Enemy(\"enemy2\", 1, 100, 15)\n    const enemy3 = new Enemy(\"enemy3\", 1, 100, 20)\n\n    let startingEnemyCharacters = {\n        enemy1: enemy1,\n        enemy2: enemy2,\n        enemy3: enemy3\n    }\n\n    const [ playerCharacters, setPlayerCharacters ] = useState(startingPlayerCharacters)\n    const [ enemyCharacters, setEnemyCharacters ] = useState(startingEnemyCharacters)\n\n    const [ enemyMovementPhase, setEnemyMovementPhase ] = useState(false) // dont think this being used any more\n    const [ selectedCharacter, setSelectedCharacter ] = useState(null)\n    const [ usedCharacters, setUsedCharacters ] = useState([])\n    const [ currentPhase, setCurrentPhase ] = useState(\"characterTurnSelect\")\n    const [ modalIsOpen, setModalIsOpen ] = useState(false)\n    const [ modalCharacter, setModalCharacter ] = useState(null)\n    const [ movableSquares, setMovableSquares ] = useState([])\n    const [ attackableSquares, setAttackableSquares ] = useState([])\n\n    useEffect(() =>{\n        if(usedCharacters.length === 3) {\n            setCurrentPhase(\"enemyMovement\")\n            setUsedCharacters([])\n        }\n    }, [usedCharacters])\n\n    useEffect(() =>{\n\n        let timeout = 0\n        let timeout2 = 0\n        let timeout3 = 0\n\n        if (currentPhase === \"enemyMovement\") {\n            timeout = enemy1.takeTurn(playerCharacters, enemyCharacters, setEnemyCharacters)\n            setTimeout(() => {\n                timeout2 = enemy2.takeTurn(playerCharacters, enemyCharacters, setEnemyCharacters)\n                setTimeout(() => {\n                    timeout3 = enemy3.takeTurn(playerCharacters, enemyCharacters, setEnemyCharacters)\n                    setTimeout(() => setCurrentPhase(\"characterTurnSelect\"), (timeout3 + 500))\n                }, (timeout2))\n            }, timeout)\n        }\n    }, [currentPhase])\n\n\n    const calculateMovementLocations = (startingPosition, numberOfStepsAllowed) => {\n\n        const movableLocations = []\n        movableLocations.push(startingPosition)\n\n        for (let i = 1; i <= numberOfStepsAllowed; i++){\n            movableLocations.forEach( movableLocation => {\n                const currentRow = Math.ceil(movableLocation / boardWidth)\n                // if ((movableLocation + boardWidth) < (boardWidth * boardHeight) && !movableLocations.includes(movableLocation + boardWidth)) movableLocations.push(movableLocation + boardWidth)\n                if ((movableLocation + boardWidth) < (boardWidth * boardHeight)) {\n                    if (!movableLocations.includes(movableLocation + boardWidth)) movableLocations.push(movableLocation + boardWidth)\n                } \n                if ((movableLocation - boardWidth) > 0) {\n                    if (!movableLocations.includes(movableLocation - boardWidth)) movableLocations.push(movableLocation - boardWidth)\n                }\n                const nextSquareRow = Math.ceil(((movableLocation + 1) / boardWidth))\n                if (nextSquareRow === currentRow) {\n                    if (!movableLocations.includes(movableLocation + 1)) movableLocations.push(movableLocation + 1)\n                }\n                const previousSquareRow = Math.ceil(((movableLocation - 1) / boardWidth))\n                if (previousSquareRow === currentRow) {\n                    if (!movableLocations.includes(movableLocation - 1)) movableLocations.push(movableLocation - 1)\n                }\n            })\n        }\n        setMovableSquares(movableLocations)\n    }\n\n    const calculateAttackLocations = (characterToAttack, attackRange) => {\n        const currentPosition = playerCharacters[characterToAttack][\"position\"]\n        const currentRow = Math.ceil(currentPosition / boardWidth)\n        const attackableLocations = []\n\n        for (let i = 1 ; i <= attackRange ; i++) {\n            if( currentPosition + (i * 5) < boardWidth * boardHeight ) attackableLocations.push(currentPosition + (i * 5))\n            if( currentPosition - (i * 5) > 0 ) attackableLocations.push(currentPosition - (i * 5))\n            if( Math.ceil((currentPosition + (i * 1)) / boardWidth) === currentRow ) attackableLocations.push(currentPosition + (i * 1))\n            if( Math.ceil((currentPosition - (i * 1)) / boardWidth) === currentRow ) attackableLocations.push(currentPosition - (i * 1))\n        }\n        setAttackableSquares(attackableLocations)\n    }\n\n    const handleImageClick = (character) => {\n        setModalIsOpen(true)\n        setModalCharacter(character)\n    }\n\n    return (\n        <div>\n            <p>GameScreen</p>\n            <GameBoard \n                selectedCharacter={selectedCharacter} \n                currentPhase={currentPhase}\n                setCurrentPhase={setCurrentPhase}\n                movableSquares={movableSquares}\n                attackableSquares={attackableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                enemyCharacters={enemyCharacters}\n                handleImageClick={handleImageClick}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n                setAttackableSquares={setAttackableSquares}\n            />\n            <GameActionBar \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter} \n                currentPhase={currentPhase} \n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n                calculateAttackLocations={calculateAttackLocations}\n                setMovableSquares={setMovableSquares}\n                setAttackableSquares={setAttackableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                enemyMovementPhase={enemyMovementPhase}\n                setEnemyMovementPhase={setEnemyMovementPhase}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n            />\n            {modalCharacter && <Modal\n                className=\"modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={modalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n            >\n                <button className=\"modal-close-button\" onClick={() => setModalIsOpen(false)}>\n\t\t\t\t\tClose\n\t\t\t\t</button>\n                <p>{modalCharacter.name}</p>\n                <p>Attack: {modalCharacter.attackPoints}</p>\n                <p>Health: {modalCharacter.healthPoints}</p>\n                <p>status: {modalCharacter.statusEffects[0]}</p>\n            </Modal>}\n        </div>\n    )\n}\n\nexport default GameScreen\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["78","79"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",["80"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["81","82","83","84","85"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",["86"],"import Character from './Character.js'\n\nfunction MeleePlayer(name, attackPoints, healthPoints, position, type) {\n    Character.call(this, name, attackPoints, healthPoints, position)\n    this.type = type\n    this.equipedWeapon  = null\n    this.weapons = []\n    this.ultimateCharge = 0\n\n    // this.statusEffects = []\n}\n\nMeleePlayer.prototype = Object.create(Character.prototype);\nObject.defineProperty(MeleePlayer.prototype, 'constructor', { \n    value: MeleePlayer, \n    enumerable: false, // so that it does not appear in 'for in' loop\n    writable: true \n});\n\nMeleePlayer.prototype.attack = function (enemy){\n    let damageDone = this.attackPoints\n    const startingHealth = enemy.healthPoints;\n\n    if(this.equipedWeapon) {\n        damageDone += this.equipedWeapon.attackPower\n        const randomNumber = Math.floor(Math.random() * 100) + 1\n        switch(this.equipedWeapon.type){\n            case(\"sword\"):\n                if(randomNumber <= 25) damageDone *= 2\n                break\n            case(\"axe\"):\n                if(randomNumber <= 10) damageDone = startingHealth\n                else if(randomNumber <= 20) enemy.statusEffects.push(\"attack down\")\n                break\n            case(\"club\"):\n                if(randomNumber <= 25) enemy.statusEffects.push(\"stun\")\n                break\n        }\n    }\n    enemy.healthPoints = startingHealth - damageDone\n}\n\nexport default MeleePlayer","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js",["87","88","89","90","91"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js",["92"],"import React, { useState } from 'react';\n\nconst CharacterTurnSelect = ({\n    playerCharacters,\n    setSelectedCharacter,\n    usedCharacters,\n    setCurrentPhase,\n    calculateMovementLocations }) => {\n\n\n    const handleSelectCharacter = (character) => {\n        setSelectedCharacter(character)\n        calculateMovementLocations(playerCharacters[character].position, 2)\n        setCurrentPhase(\"playerMovement\")\n    }\n\n    return (\n        <div>\n            <p>Select a character to control...</p>\n            <button disabled={usedCharacters.includes(\"meleePlayer\")} onClick={() => handleSelectCharacter(\"meleePlayer\")}>Knight</button>\n            <button disabled={usedCharacters.includes(\"magicPlayer\")} onClick={() => handleSelectCharacter(\"magicPlayer\")}>Mage</button>\n            <button disabled={usedCharacters.includes(\"healerPlayer\")} onClick={() => handleSelectCharacter(\"healerPlayer\")}>Healer</button>\n            {/* <button onClick={() => handleEndMovementPhase()}>End Movement Phase</button> */}\n        </div>\n    )\n}\n\nexport default CharacterTurnSelect","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":85,"column":8,"nodeType":"103","endLine":85,"endColumn":22,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"106","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":27,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"105","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"108","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"109","line":72,"column":8,"nodeType":"103","endLine":72,"endColumn":43,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":76,"column":9,"nodeType":"113","messageId":"114","endLine":86,"endColumn":10},{"ruleId":"101","severity":1,"message":"115","line":94,"column":8,"nodeType":"103","endLine":94,"endColumn":43,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"112","line":27,"column":9,"nodeType":"113","messageId":"114","endLine":38,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"117","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":18},{"ruleId":"97","severity":1,"message":"118","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"97","severity":1,"message":"119","line":23,"column":13,"nodeType":"99","messageId":"100","endLine":23,"endColumn":26},{"ruleId":"97","severity":1,"message":"120","line":23,"column":28,"nodeType":"99","messageId":"100","endLine":23,"endColumn":44},{"ruleId":"97","severity":1,"message":"105","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["123"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'playerCharacters'. Either include it or remove the dependency array.",["124"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["125"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["126"],"'swordImage' is defined but never used.","'WeaponImages' is defined but never used.","'equipedWeapon' is assigned a value but never used.","'setEquipedWeapon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",{"range":"135","text":"136"},"Update the dependencies array to be: [playerCharacters, selectedCharacter]",{"range":"137","text":"138"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"139","text":"140"},"Update the dependencies array to be: [movableSquares, attackableSquares, selectedCharacter, image, squareNumber]",{"range":"141","text":"142"},[3164,3178],"[currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",[1418,1437],"[playerCharacters, selectedCharacter]",[2479,2514],"[playerCharacters, enemyCharacters, squareNumber]",[3223,3258],"[movableSquares, attackableSquares, selectedCharacter, image, squareNumber]"]