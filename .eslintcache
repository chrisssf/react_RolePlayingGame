[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9"},{"size":500,"mtime":1608752934000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608752934002,"results":"12","hashOfConfig":"11"},{"size":230,"mtime":1608770853174,"results":"13","hashOfConfig":"11"},{"size":902,"mtime":1608774806712,"results":"14","hashOfConfig":"11"},{"size":444,"mtime":1608775551998,"results":"15","hashOfConfig":"11"},{"size":3110,"mtime":1608776195736,"results":"16","hashOfConfig":"11"},{"size":5922,"mtime":1608772152287,"results":"17","hashOfConfig":"11"},{"size":128,"mtime":1586701404653,"results":"18","hashOfConfig":"11"},{"size":645,"mtime":1608775715273,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13roori",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["43","44"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["45"],"import React, { useState } from 'react';\nimport MovementPhase from './MovementPhase.js'\n\n\nconst GameActionBar = ( { setSelectedCharacter, currentPhase, setCurrentPhase } ) =>{\n\n    return (\n        <div>\n            <p>GameActionBar</p>\n            <MovementPhase \n                setSelectedCharacter={setSelectedCharacter}\n                setCurrentPhase={setCurrentPhase}\n            />\n        </div>\n    )\n\n}\n\n\nexport default GameActionBar","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",["46","47","48"],"import React, { useState } from 'react';\nimport './GameBoard.css'\n// import { StyleSheet, Text, View, FlatList, Modal } from 'react-native';\n\nimport GameSquare from './GameSquare.js'\n\nconst GameBoard = ({ selectedCharacter, currentPhase }) => {\n\n    const [ magicPosition, setMagicPosition ] = useState(16)\n    const [ meleePosition, setMeleePosition ] = useState(6)\n    const [ healerPosition, setHealerPosition ] = useState(0)\n\n\n    const fillGameBoard = () => {\n\n        const playerPositions = [magicPosition, meleePosition, healerPosition]\n        console.log(playerPositions);\n        \n\n        // const gameSquares = []\n\n        // for ( let i = 1; i < 26; i++ ) {\n        //     gameSquares.push(i)\n        // }  \n        // return <FlatList \n        //     data={gameSquares}\n        //     renderItem={({ item }) => <GameSquare squareNumber={item} />}\n        //     keyExtractor={item => item}\n        //     numColumns={5}\n        // />\n\n\n        // using grid which doesnt work with react native\n        const gameSquares = []\n        for ( let i = 1; i < 26; i++ ) {\n            gameSquares.push(<GameSquare key={i} playerPositions={playerPositions} squareNumber={i}/>)\n        }   \n        // console.log(gameSquares);\n        \n        return gameSquares  \n    }\n\n    return (\n        <div>\n        {/* <div style={styles.container}> */}\n\n            <p>GameBoard</p>\n            {/* <div style={styles.boardContainer}> */}\n            <div className=\"board-container\">\n                {fillGameBoard()}\n            </div>\n            {/* <Modal\n                // style={{height: 50, width: 50}}\n                // animationType=\"slide\"\n                transparent={true}\n                visible={false}\n                // onRequestClose={() => {\n                // Alert.alert(\"Modal has been closed.\");\n                // }}\n            >  \n                <View style={{\n                    flex: 1,\n                    flexDirection: 'column',\n                    backgroundColor: '#00000080',\n                    justifyContent: 'center',\n                    alignItems: 'center'}}>\n                    <View style={{\n                        width: 300,\n                        height: 500,\n                        backgroundColor: '#fff', \n                        padding: 20}}>\n                            \n                        <Text>Hi</Text>\n                    \n                    </View>\n                </View> */}\n                {/* <View style={{height: 70, width:50}}>\n                    <Text>Hi</Text>\n                </View> */}\n            {/* </Modal> */}\n\n        </div>\n    )\n\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//         // flex: 1,\n        \n\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n//     boardContainer: {\n//         flexDirection: 'row',\n//         flexWrap: 'wrap',\n//         maxWidth: 425,\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n// });\n\nexport default GameBoard","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["49","50","51","52"],"import React, { useState, useEffect } from 'react';\nimport './GameSquare.css'\nimport mageImage from '../assets/mage.png'\nimport knightImage from '../assets/knight.png'\n\n// import { StyleSheet, Text, View, Dimensions, Image, Modal } from 'react-native';\n\n// import Modal from 'modal-enhanced-react-native-web';\n// import Modal from 'modal-react-native-web'\n\n\nimport boardImages from '../assets/boardImages'\n\n\n// const width = Dimensions.get('window').width\nconst width = window.innerWidth\n\n\n\nconst GameSquare = ({ squareNumber, playerPositions }) =>{\n\n    const [image, setImage] = useState(null)\n    const [modalVisable, setModalVisable] = useState(false)\n\n    const mage = {\n        \"image\": \"mage\",\n        \"maxHp\": 10,\n        \"currentHp\": 6,\n        \"baseAttack\": 8, \n        \"equipedWeapon\": null,\n        \"inventory\": null,\n        \"spells\": null\n    }\n\n\nuseEffect(() => {\n    if (playerPositions[0] === squareNumber) {\n        // setImage(mage.image)\n        // setImage('../assets/mage.png')\n        setImage(mageImage)\n    } else if (playerPositions[1] === squareNumber) {\n        // setImage(\"knight\")\n        // setImage('../assets/knight.png')\n        setImage(knightImage)\n    } else if (playerPositions[2] === squareNumber) {\n        setImage(null) \n    }\n\n    if (squareNumber === 3){\n        setModalVisable(true)\n    }\n}, [])\n\n\n    console.log(width);\n    \n    if (width > 500) {\n        return (\n            // <div style={styles.biggerContainer}>\n            <div className=\"bigger-square-container\">\n\n                {image ? <img src={image} alt={image} className=\"game-square-image\"></img> : <p>{squareNumber}</p>}\n                {/* <p>{squareNumber}</p>\n                {image && <img src={image} alt={image} className=\"game-square-image\"></img>} */}\n\n                {/* {image && <Image\n                    style={{\n                        width: 80,\n                        height: 80,\n                        // alignSelf: \"center\",\n                        // justifyContent: \"center\"\n                        // borderRadius: 20,\n                        // marginTop: 10,\n                        // marginHorizontal: 16\n                    }}\n                    // source={require(\"../assets/knight.png\")}\n                    source={boardImages[image]}\n                    // source={{uri: animalImageURL}}\n                />} */}\n\n                {/* <Modal\n                    style={{height: 500, width: 100}}\n                    // animationType=\"slide\"\n                    // transparent={true}\n                    visible={true}\n                    // onRequestClose={() => {\n                    // Alert.alert(\"Modal has been closed.\");\n                    // }}\n                >\n                    <Text>Hi</Text>\n                </Modal> */}\n            </div>\n        )\n        \n    } else {\n        return (\n            // <div style={styles.container}>\n            <div className=\"smaller-square-container\">\n                {/* <p>{squareNumber}</p> */}\n                {image ? <img src={image} alt={image} className=\"game-square-image\"></img> : <p>{squareNumber}</p>}\n\n                {/* {image && <Image\n                    style={{\n                        width: width/5 - 15,\n                        height: width/5 - 15,\n                        // alignSelf: \"center\",\n                        // justifyContent: \"center\"\n                        // borderRadius: 20,\n                        // marginTop: 10,\n                        // marginHorizontal: 16\n                    }}\n                    // source={require(\"../assets/knight.png\")}\n                    source={boardImages[image]}\n                    // source={{uri: animalImageURL}}\n                />} */}\n                {/* <Modal\n                // style={{height: 50, width: 50}}\n                // animationType=\"slide\"\n                transparent={true}\n                visible={false}\n                // onRequestClose={() => {\n                // Alert.alert(\"Modal has been closed.\");\n                // }}\n            >  \n                <View style={{\n                    flex: 1,\n                    flexDirection: 'column',\n                    // backgroundColor: '#00000080',\n                    backgroundColor: 'rgba(80,80,80,0.09)',\n                    justifyContent: 'center',\n                    alignItems: 'center'}}>\n                    <View style={{\n                        width: 300,\n                        height: 500,\n                        backgroundColor: '#fff', \n                        padding: 20}}>\n                            \n                    <Text>Hi {console.log(\"in modal\", modalVisable + \" \" + squareNumber)\n                    }</Text>\n                    \n                    </View>\n                </View> */}\n                {/* <View style={{height: 70, width:50}}>\n                    <Text>Hi</Text>\n                </View> */}\n            {/* </Modal> */}\n{/* <Modal\n                    style={{height: 50, width: 10}}\n                    // animationType=\"slide\"\n                    // transparent={true}\n                    visible={false}\n                    // onRequestClose={() => {\n                    // Alert.alert(\"Modal has been closed.\");\n                    // }}\n                >\n                    <Text>Hi</Text>\n                </Modal> */}\n            </div>\n        )\n    }\n\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//         // flex: 1,\n//     //   border: '1 solid black',\n//         // borderColor: 'black',\n//         borderWidth: 1,\n//         // borderStyle: 'solid',\n//         width: width/5 - 15,\n//         height: width/5 - 15\n\n//         // backgroundColor: '#fff',\n//         // alignItems: 'center',\n//         // justifyContent: 'center',\n//     },\n//     biggerContainer: {\n//         borderWidth: 1,\n//         width: 85,\n//         height: 85,\n\n//     },\n//   });\n\nexport default GameSquare\n\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],["53","54"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":9,"column":28,"nodeType":"61","messageId":"62","endLine":9,"endColumn":44},{"ruleId":"59","severity":1,"message":"64","line":10,"column":28,"nodeType":"61","messageId":"62","endLine":10,"endColumn":44},{"ruleId":"59","severity":1,"message":"65","line":11,"column":29,"nodeType":"61","messageId":"62","endLine":11,"endColumn":46},{"ruleId":"59","severity":1,"message":"66","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":19},{"ruleId":"59","severity":1,"message":"67","line":23,"column":12,"nodeType":"61","messageId":"62","endLine":23,"endColumn":24},{"ruleId":"59","severity":1,"message":"68","line":25,"column":11,"nodeType":"61","messageId":"62","endLine":25,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":52,"column":4,"nodeType":"71","endLine":52,"endColumn":6,"suggestions":"72"},{"ruleId":"55","replacedBy":"73"},{"ruleId":"57","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setMagicPosition' is assigned a value but never used.","'setMeleePosition' is assigned a value but never used.","'setHealerPosition' is assigned a value but never used.","'boardImages' is defined but never used.","'modalVisable' is assigned a value but never used.","'mage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'playerPositions' and 'squareNumber'. Either include them or remove the dependency array.","ArrayExpression",["77"],["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [playerPositions, squareNumber]",{"range":"80","text":"81"},[1339,1341],"[playerPositions, squareNumber]"]