[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js":"15","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js":"16","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js":"17","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js":"18","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js":"19","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js":"20","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js":"21","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js":"22","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterInfoModal.js":"23"},{"size":500,"mtime":1608752934000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608752934002,"results":"26","hashOfConfig":"25"},{"size":230,"mtime":1608770853174,"results":"27","hashOfConfig":"25"},{"size":10397,"mtime":1620129436038,"results":"28","hashOfConfig":"25"},{"size":6700,"mtime":1620129436034,"results":"29","hashOfConfig":"25"},{"size":1841,"mtime":1620129436035,"results":"30","hashOfConfig":"25"},{"size":15506,"mtime":1620129436036,"results":"31","hashOfConfig":"25"},{"size":128,"mtime":1586701404653,"results":"32","hashOfConfig":"25"},{"size":1436,"mtime":1611419845025,"results":"33","hashOfConfig":"25"},{"size":8726,"mtime":1620129436037,"results":"34","hashOfConfig":"25"},{"size":13850,"mtime":1620129436038,"results":"35","hashOfConfig":"25"},{"size":2782,"mtime":1613581510479,"results":"36","hashOfConfig":"25"},{"size":154,"mtime":1610323315030,"results":"37","hashOfConfig":"25"},{"size":1115,"mtime":1613581712577,"results":"38","hashOfConfig":"25"},{"size":5724,"mtime":1613579818753,"results":"39","hashOfConfig":"25"},{"size":1592,"mtime":1613579922859,"results":"40","hashOfConfig":"25"},{"size":166,"mtime":1611517570117,"results":"41","hashOfConfig":"25"},{"size":277,"mtime":1612483278790,"results":"42","hashOfConfig":"25"},{"size":1153,"mtime":1613581310256,"results":"43","hashOfConfig":"25"},{"size":2917,"mtime":1613581382898,"results":"44","hashOfConfig":"25"},{"size":4379,"mtime":1617623388200,"results":"45","hashOfConfig":"25"},{"size":209,"mtime":1612483278790,"results":"46","hashOfConfig":"25"},{"size":2845,"mtime":1620129436032,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13roori",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["98","99"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["100"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["101","102","103"],"import React, { useEffect, useRef } from 'react';\nimport './GameActionBar.css'\nimport CharacterTurnSelect from './CharacterTurnSelect.js'\nimport MovementPhase from './MovementPhase.js'\nimport AttackPhase from './AttackPhase.js'\n\nimport sword from '../assets/axe.png'\nimport background from '../assets/knight.png'\n\nconst GameActionBar = ( { \n    selectedCharacter,\n    setSelectedCharacter, \n    currentPhase, \n    setCurrentPhase, \n    calculateMovementLocations, \n    calculateAttackLocations,\n    setMovableSquares, \n    setAttackableSquares,\n    playerCharacters, \n    setPlayerCharacters,\n    // enemyMovementPhase,\n    setEnemyMovementPhase,\n    usedCharacters,\n    setUsedCharacters} ) =>{\n\n    // testing\n    const testBox = useRef()\n    const testImage = useRef()\n    const test = () => {\n        const element = document.getElementById(\"testBox\")\n        element.classList.toggle(\"transform\")\n        element.classList.toggle(\"right\")\n        // element.classList.add(\"transform\")\n        \n        testBox.current.classList.toggle(\"transform\")\n        testBox.current.classList.toggle(\"right\")\n        console.log(testBox)\n        // Both of the above do the same thing BUT using REF is the correct react way of doing it\n\n        testImage.current.classList.toggle(\"right\")\n        // testImage.current.classList.toggle(\"transform\")\n        setTimeout(() => testImage.current.classList.toggle(\"right\"), 501)\n    }\n    const up = () => {\n        testImage.current.classList.toggle(\"up\")\n        testImage.current.classList.toggle(\"hidden\")\n        setTimeout(() => {\n            testImage.current.classList.toggle(\"up\")\n            testImage.current.classList.toggle(\"hidden\")\n        }, 501)\n    }\n    const down = () => {\n        testImage.current.classList.toggle(\"down\")\n        testImage.current.classList.toggle(\"hidden\")\n        setTimeout(() => {\n            testImage.current.classList.toggle(\"down\")\n            testImage.current.classList.toggle(\"hidden\")\n        }, 501)\n    }\n    const left = () => {\n        testImage.current.classList.toggle(\"left\")\n        testImage.current.classList.toggle(\"hidden\")\n        setTimeout(() => {\n            testImage.current.classList.toggle(\"left\")\n            testImage.current.classList.toggle(\"hidden\")\n        }, 501)\n    }\n    const right = () => {\n        testImage.current.classList.toggle(\"right\")\n        testImage.current.classList.toggle(\"hidden\")\n        setTimeout(() => {\n            testImage.current.classList.toggle(\"right\")\n            testImage.current.classList.toggle(\"hidden\")\n        }, 501)\n    }\n    // end of testing\n\n\n    const startingPosition = useRef(null)\n    // this didnt need to be useRef, also work with state\n    // const [ startingPosition, setStartingPosition ] = useState(null)\n\n    useEffect(() =>{\n        if(selectedCharacter) startingPosition.current = playerCharacters[selectedCharacter][\"position\"]\n    }, [selectedCharacter])\n\n    return (\n        <div>\n            <p>GameActionBar</p>\n            {currentPhase === \"characterTurnSelect\" && <CharacterTurnSelect\n                playerCharacters={playerCharacters} \n                setSelectedCharacter={setSelectedCharacter}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n            />}\n            {currentPhase === \"playerMovement\" && <MovementPhase \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter}\n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n                setMovableSquares={setMovableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                setEnemyMovementPhase={setEnemyMovementPhase}\n                calculateAttackLocations={calculateAttackLocations}\n                startingPosition={startingPosition}\n            />}\n            {currentPhase === \"enemyMovement\" && \n                <div>\n                    <h1>Enemy Movement Phase</h1>\n                    <p>Please Wait...</p>\n                </div>\n            }\n            {currentPhase === \"playerAttack\" && <AttackPhase \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter}\n                setCurrentPhase={setCurrentPhase}\n                calculateAttackLocations={calculateAttackLocations}\n                calculateMovementLocations={calculateMovementLocations}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                setAttackableSquares={setAttackableSquares}\n                startingPosition={startingPosition}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n            />}\n\n            {/* testing  */}\n            <div id=\"testBox\" className=\"box transform right\" onClick={() => test()}></div>\n            <div className=\"box\" ref={testBox} onClick={() => test()}></div>\n            {/* <div className=\"box transform\" ref={testBox} onClick={() => test()}></div> */}\n            <input type=\"button\" id=\"button\" value=\"Click Me\" onClick={() => test()}></input>\n            <input type=\"button\" id=\"button\" value=\"UP\" onClick={() => up()}></input>\n            <input type=\"button\" id=\"button\" value=\"DOWN\" onClick={() => down()}></input>\n            <input type=\"button\" id=\"button\" value=\"LEFT\" onClick={() => left()}></input>\n            <input type=\"button\" id=\"button\" value=\"RIGHT\" onClick={() => right()}></input>\n            {/* <div className=\"container-container\" style={{ backgroundImage: `url(${background})`, backgroundSize: \"cover\" }}> */}\n            <div className=\"container-container\">\n                {/* <div className=\"test-background-image-container\">\n                    <img src={background} alt={\"image\"}  className=\"test-background-image\" onClick={() => test()}></img> \n                </div>\n                <div ref={testImage} className=\"test-image-container hidden\">\n                    <img src={sword} alt={\"image\"}  className=\"test-image\" onClick={() => test()}></img> \n                </div> */}\n                <img src={background} alt={\"image\"}  className=\"test-background-image\" onClick={() => test()}></img> \n                <img src={sword} ref={testImage} alt={\"image\"}  className=\"test-image hidden\" onClick={() => test()}></img> \n\n            </div>\n            {/* end of testing  */}\n\n        </div>\n    )\n}\n\n\nexport default GameActionBar","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react';\n// import ReactDOM from 'react-dom'\n// import Modal from 'react-modal'\nimport './GameSquare.css'\nimport CharacterInfoModal from '../components/CharacterInfoModal.js'\nimport mageImage from '../assets/mage.png'\nimport knightImage from '../assets/knight.png'\nimport healerImage from '../assets/healer.png'\nimport orcImage from '../assets/orc.png'\n\n// import boardImages from '../assets/boardImages'\n\nconst width = window.innerWidth\n\n\nconst GameSquare = ({ \n    squareNumber, \n    currentPhase,\n    setCurrentPhase,\n    movableSquares, \n    attackableSquares,\n    selectedCharacter,\n    setSelectedCharacter,\n    playerCharacters,\n    setPlayerCharacters,\n    enemyCharacters,\n    setEnemyCharacters,\n    handleImageClick,\n    usedCharacters,\n    setUsedCharacters,\n    setAttackableSquares,\n    displayStatusEffects\n }) =>{\n\n    const [ image, setImage ] = useState(null)\n    const [ squareStyling, setSquareStyling ] = useState(\"\")\n    const [ character, setCharacter ] = useState(null)\n    const [ modalIsOpen, setModalIsOpen ] = useState(false)\n\n//test!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // const [ fing, setFing ] = useState(\"meleePlayer\")\n    // const meleeRef = useRef()\n    // const magicRef = useRef()\n    // const healerRef = useRef()\n    // const characterRef = useRef()\n\n    // const handleImageClick = (character) => {\n    //     meleeRef.current.classList.add(\"blah\")\n    // }\n\n    // let makeRef = meleeRef\n//test end here!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    useEffect(() => {\n        if (playerCharacters[\"magicPlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"magicPlayer\"])\n            setImage(mageImage)\n        } else if (playerCharacters[\"meleePlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"meleePlayer\"])\n            setImage(knightImage)\n        } else if (playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber) {\n            setCharacter(playerCharacters[\"healerPlayer\"])\n            setImage(healerImage) \n        } else {\n            setImage(null)\n        }\n        // since adding id this could now be a loop!!!!!!!!!!!.......\n        if (enemyCharacters[\"enemy1\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy1\"])\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy2\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy2\"])\n            setImage(orcImage)\n        } else if (enemyCharacters[\"enemy3\"][\"position\"] === squareNumber){\n            setCharacter(enemyCharacters[\"enemy3\"])\n            setImage(orcImage)\n        } \n    }, [playerCharacters, enemyCharacters])\n\n    useEffect(() => {\n        let currentImage = null\n        switch (selectedCharacter) {\n            case \"meleePlayer\":\n                currentImage = knightImage\n                break\n            case \"magicPlayer\":\n                currentImage = mageImage\n                break\n            case \"healerPlayer\":\n                currentImage = healerImage\n                break\n            default:\n                currentImage = null\n        }\n        if (( image === null || image === currentImage ) && movableSquares.includes(squareNumber) ) {\n            setSquareStyling(\"movable\")\n        } else if ( attackableSquares.includes(squareNumber) && selectedCharacter === \"healerPlayer\" && \n        playerCharacters[\"healerPlayer\"][\"equippedHeal\"] !== null ){\n            if ( !(enemyCharacters[\"enemy1\"][\"position\"] === squareNumber || \n                    enemyCharacters[\"enemy2\"][\"position\"] === squareNumber || \n                    enemyCharacters[\"enemy3\"][\"position\"] === squareNumber) \n            ) setSquareStyling(\"healable\")\n            else setSquareStyling(\"\")\n        } else if (attackableSquares.includes(squareNumber) && !(\n            playerCharacters[\"magicPlayer\"][\"position\"] === squareNumber ||\n            playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber ||\n            playerCharacters[\"meleePlayer\"][\"position\"] === squareNumber )) {\n                // if (selectedCharacter === \"healerPlayer\" && playerCharacters[\"healerPlayer\"][\"equippedHeal\"] !== null) { \n                    setSquareStyling(\"attackable\")\n                // }\n        } else if ( attackableSquares.includes(squareNumber) && \n            ( selectedCharacter === \"healerPlayer\" && playerCharacters[\"healerPlayer\"][\"equippedHeal\"] === null)\n            && !(\n                playerCharacters[\"magicPlayer\"][\"position\"] === squareNumber ||\n                playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber ||\n                playerCharacters[\"meleePlayer\"][\"position\"] === squareNumber )) {\n            setSquareStyling(\"attackable\")\n        } else {\n            setSquareStyling(\"\")\n        }\n        if (selectedCharacter === \"healerPlayer\" && \n            playerCharacters[\"healerPlayer\"][\"equippedHeal\"] !== null && \n            playerCharacters[\"healerPlayer\"][\"position\"] === squareNumber && \n            currentPhase === \"playerAttack\"){\n            setSquareStyling(\"healable\")\n        } \n    }, [movableSquares, attackableSquares, playerCharacters, currentPhase])\n\n\n    const handleClickSquare = () => {\n        if ( squareStyling === \"movable\"){\n            const updateableCharacter = playerCharacters[selectedCharacter]\n            updateableCharacter.position = squareNumber\n            setPlayerCharacters(prevState => ({...prevState, [selectedCharacter]: updateableCharacter }))\n        } else if ( squareStyling === \"attackable\" && image !== null) {\n            setModalIsOpen(true)\n        } else if ( squareStyling === \"healable\" && image !== null ){\n            setModalIsOpen(true)\n        }\n    }\n\n    const handleModalAttack = () => {\n        setModalIsOpen(false)\n        playerCharacters[selectedCharacter].attack(character, setEnemyCharacters)\n        setCurrentPhase(\"characterTurnSelect\")\n        setSelectedCharacter(null)\n        const updatedUsedCharacters = [...usedCharacters, selectedCharacter]\n        setUsedCharacters(updatedUsedCharacters)\n        setAttackableSquares([])\n    }\n\n\n    return (\n        <>\n            <div onClick={() => handleClickSquare()} className={width > 500 ? `bigger-square-container ${squareStyling}` : `smaller-square-container ${squareStyling}` }>\n                {image ? \n                    <img src={image} alt={image} className=\"game-square-image\" onClick={() => handleImageClick(character)}></img> \n                : \n                    <p>{squareNumber}</p>\n                    // <p></p>\n                }\n            </div>\n            {/* {character && selectedCharacter && <Modal\n                className=\"attack-modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={modalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n                >\n                {playerCharacters[\"healerPlayer\"][\"equippedHeal\"] !== null ? <p>Heal {character.name} with {playerCharacters[\"healerPlayer\"][\"equippedHeal\"].name}</p> : \n                <p>Attack {character.name} with {playerCharacters[selectedCharacter].type}?</p>}\n                {selectedCharacter === \"meleePlayer\" && playerCharacters[selectedCharacter].equippedWeapon && <p>Current equipped Weapon is {playerCharacters[selectedCharacter].equippedWeapon.name}</p>}\n                {selectedCharacter === \"magicPlayer\" && playerCharacters[selectedCharacter].equippedSpell && <p>Current equipped Spell is {playerCharacters[selectedCharacter].equippedSpell.name}</p>}\n                {selectedCharacter === \"healerPlayer\" && playerCharacters[selectedCharacter].equippedHeal && <p>Current equipped heal is {playerCharacters[selectedCharacter].equippedHeal.name}</p>}\n                <p>This will end this characters turn</p>\n                <button onClick={() => handleModalAttack()}>Yes</button>\n                <button onClick={() => setModalIsOpen(false)}>No</button>\n            </Modal>} */}\n            \n            {character && selectedCharacter &&\n            <CharacterInfoModal\n                character={character}\n                modalIsOpen={modalIsOpen}\n                setModalIsOpen={setModalIsOpen}\n                playerCharacters={playerCharacters}\n                selectedCharacter={selectedCharacter}\n                handleModalAttack={handleModalAttack}\n                displayStatusEffects={displayStatusEffects}\n            />}\n        </>\n    )\n}\n\nexport default GameSquare\n\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],["120","121"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterInfoModal.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":107,"column":8,"nodeType":"128","endLine":107,"endColumn":22,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":85,"column":8,"nodeType":"128","endLine":85,"endColumn":27,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":147,"column":17,"nodeType":"134","endLine":147,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":148,"column":17,"nodeType":"134","endLine":148,"endColumn":118},{"ruleId":"135","severity":1,"message":"136","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":77,"column":7,"nodeType":"137","messageId":"138","endLine":77,"endColumn":9},{"ruleId":"135","severity":1,"message":"140","line":85,"column":7,"nodeType":"137","messageId":"138","endLine":85,"endColumn":11},{"ruleId":"135","severity":1,"message":"141","line":93,"column":7,"nodeType":"137","messageId":"138","endLine":93,"endColumn":11},{"ruleId":"135","severity":1,"message":"142","line":101,"column":7,"nodeType":"137","messageId":"138","endLine":101,"endColumn":12},{"ruleId":"126","severity":1,"message":"143","line":137,"column":8,"nodeType":"128","endLine":137,"endColumn":43,"suggestions":"144"},{"ruleId":"126","severity":1,"message":"145","line":186,"column":8,"nodeType":"128","endLine":186,"endColumn":75,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"147","line":220,"column":11,"nodeType":"137","messageId":"138","endLine":220,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":228,"column":17,"nodeType":"134","endLine":228,"endColumn":123},{"ruleId":"135","severity":1,"message":"148","line":236,"column":11,"nodeType":"137","messageId":"138","endLine":236,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":267,"column":16,"nodeType":"134","endLine":267,"endColumn":215},{"ruleId":"135","severity":1,"message":"149","line":270,"column":11,"nodeType":"137","messageId":"138","endLine":270,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":293,"column":20,"nodeType":"134","endLine":293,"endColumn":116},{"ruleId":"132","severity":1,"message":"133","line":325,"column":17,"nodeType":"134","endLine":325,"endColumn":140},{"ruleId":"150","severity":1,"message":"151","line":325,"column":48,"nodeType":"152","messageId":"153","endLine":325,"endColumn":49},{"ruleId":"150","severity":1,"message":"151","line":325,"column":56,"nodeType":"152","messageId":"153","endLine":325,"endColumn":57},{"ruleId":"122","replacedBy":"154"},{"ruleId":"124","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'playerCharacters'. Either include it or remove the dependency array.",["159"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'sword' is defined but never used.","Identifier","unusedVar","'up' is assigned a value but never used.","'down' is assigned a value but never used.","'left' is assigned a value but never used.","'right' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'enemyCharacters', 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["161"],"'displayImage' is assigned a value but never used.","'displayAttackAnimationWithEquipped' is assigned a value but never used.","'displayAttackAnimationNothingEquipped' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",{"range":"170","text":"171"},"Update the dependencies array to be: [playerCharacters, selectedCharacter]",{"range":"172","text":"173"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"174","text":"175"},"Update the dependencies array to be: [movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]",{"range":"176","text":"177"},[4501,4515],"[currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",[2910,2929],"[playerCharacters, selectedCharacter]",[4154,4189],"[playerCharacters, enemyCharacters, squareNumber]",[6617,6684],"[movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]"]