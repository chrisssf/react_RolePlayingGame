[{"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js":"1","/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js":"2","/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js":"3","/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js":"4","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js":"5","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js":"6","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js":"7","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js":"8","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js":"9","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js":"10","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js":"11","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js":"12","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js":"13","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js":"14","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js":"15","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js":"16","/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js":"17","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js":"18","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js":"19","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js":"20","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js":"21","/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js":"22","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterInfoModal.js":"23"},{"size":500,"mtime":1608752934000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608752934002,"results":"26","hashOfConfig":"25"},{"size":230,"mtime":1608770853174,"results":"27","hashOfConfig":"25"},{"size":10309,"mtime":1613580941800,"results":"28","hashOfConfig":"25"},{"size":6181,"mtime":1613689327082,"results":"29","hashOfConfig":"25"},{"size":1743,"mtime":1613580156190,"results":"30","hashOfConfig":"25"},{"size":8651,"mtime":1613580693587,"results":"31","hashOfConfig":"25"},{"size":128,"mtime":1586701404653,"results":"32","hashOfConfig":"25"},{"size":1436,"mtime":1611419845025,"results":"33","hashOfConfig":"25"},{"size":6399,"mtime":1613170723978,"results":"34","hashOfConfig":"25"},{"size":12759,"mtime":1613580958592,"results":"35","hashOfConfig":"25"},{"size":2782,"mtime":1613581510479,"results":"36","hashOfConfig":"25"},{"size":154,"mtime":1610323315030,"results":"37","hashOfConfig":"25"},{"size":1115,"mtime":1613581712577,"results":"38","hashOfConfig":"25"},{"size":5724,"mtime":1613579818753,"results":"39","hashOfConfig":"25"},{"size":1592,"mtime":1613579922859,"results":"40","hashOfConfig":"25"},{"size":166,"mtime":1611517570117,"results":"41","hashOfConfig":"25"},{"size":277,"mtime":1612483278790,"results":"42","hashOfConfig":"25"},{"size":1153,"mtime":1613581310256,"results":"43","hashOfConfig":"25"},{"size":2917,"mtime":1613581382898,"results":"44","hashOfConfig":"25"},{"size":4379,"mtime":1613580073038,"results":"45","hashOfConfig":"25"},{"size":209,"mtime":1612483278790,"results":"46","hashOfConfig":"25"},{"size":2805,"mtime":1613579898032,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13roori",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/chrisfraser/projects/react_RPG/react_rpg/src/index.js",[],["97","98"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/reportWebVitals.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/App.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/screens/GameScreen.js",["99"],"import React, { useState, useEffect } from 'react'\n// import ReactDOM from 'react-dom'\n// import Modal from 'react-modal'\n\nimport './GameScreen.css'\nimport GameBoard from '../components/GameBoard.js'\nimport GameActionBar from '../components/GameActionBar.js'\nimport CharacterInfoModal from '../components/CharacterInfoModal.js'\n\nimport MeleePlayer from '../models/MeleePlayer.js'\nimport MagicPlayer from '../models/MagicPlayer.js'\nimport HealerPlayer from '../models/HealerPlayer.js'\nimport MeleeWeapon from '../models/MeleeWeapon.js'\nimport Enemy from '../models/Enemy.js'\nimport Spell from '../models/Spell.js'\nimport Heal from '../models/Heal.js'\n\nconst boardWidth = 5\nconst boardHeight = 5\n\nconst GameScreen = () =>{\n\n    const ken = new MeleePlayer(\"ken\", 30, 100, 11, \"Knight\")\n    const matt = new MagicPlayer(\"matt\", 20, 100, 6, \"mage\")\n    const peter = new HealerPlayer(\"peter\", 10, 100, 16, \"priest\")\n    const sword = new MeleeWeapon(\"sword-5\", 5, \"sword\")\n    const club = new MeleeWeapon(\"club-6\", 6, \"club\")\n    const axe = new MeleeWeapon(\"axe-4\", 4, \"axe\")\n    const fireball = new Spell(\"fireball\", 3, \"burn\", 10, 3) // no logic for burn yet\n    const armourBreak = new Spell(\"armour break\", 0, \"armour down\", 100, 3)\n    const attackBreak = new Spell(\"attack break\", 0, \"attack down\", 100, 3) // no logic for attack down yet\n    const freeze = new Spell(\"freeze\", 0, \"frozen\", 70 , 1)\n    const heal = new Heal(\"heal\", 10)\n    const shield = new Heal(\"shield\", 0, \"shield\", 20)\n    peter.heals.push(heal)\n    peter.heals.push(shield)\n    matt.spells.push(fireball)\n    matt.spells.push(armourBreak)\n    matt.spells.push(attackBreak)\n    matt.spells.push(freeze)\n    ken.weapons.push(sword)\n    ken.weapons.push(club)\n    ken.weapons.push(axe)\n    matt.equippedSpell = fireball\n    // peter.equippedHeal = heal\n    // ken.equippedWeapon = sword\n\n    let startingPlayerCharacters = {\n        meleePlayer: ken,\n        magicPlayer: matt,\n        healerPlayer: peter\n    }\n\n    const enemy1 = new Enemy(\"ORCenemy1\", 10, 5, 10, \"enemy1\")\n    const enemy2 = new Enemy(\"ORCenemy2\", 1000, 5, 15, \"enemy2\")\n    const enemy3 = new Enemy(\"ORCenemy3\", 1000, 5, 20, \"enemy3\")\n\n    let startingEnemyCharacters = {\n        enemy1: enemy1,\n        enemy2: enemy2,\n        enemy3: enemy3\n    }\n\n    const [ playerCharacters, setPlayerCharacters ] = useState(startingPlayerCharacters)\n    const [ enemyCharacters, setEnemyCharacters ] = useState(startingEnemyCharacters)\n\n    const [ enemyMovementPhase, setEnemyMovementPhase ] = useState(false) // dont think this being used any more\n    const [ selectedCharacter, setSelectedCharacter ] = useState(null)\n    const [ usedCharacters, setUsedCharacters ] = useState([])\n    const [ currentPhase, setCurrentPhase ] = useState(\"characterTurnSelect\")\n    const [ modalIsOpen, setModalIsOpen ] = useState(false)\n    const [ modalCharacter, setModalCharacter ] = useState(null)\n    const [ movableSquares, setMovableSquares ] = useState([])\n    const [ attackableSquares, setAttackableSquares ] = useState([])\n\n    useEffect(() =>{\n        if(usedCharacters.length === 3) {\n            setCurrentPhase(\"enemyMovement\")\n            setUsedCharacters([])\n        }\n    }, [usedCharacters])\n\n    useEffect(() =>{\n\n        let timeout = 0\n        let timeout2 = 0\n        let timeout3 = 0\n\n        if (currentPhase === \"enemyMovement\") {\n            timeout = enemy1.takeTurn(playerCharacters, setPlayerCharacters, enemyCharacters, setEnemyCharacters)\n            setTimeout(() => {\n                timeout2 = enemy2.takeTurn(playerCharacters, setPlayerCharacters, enemyCharacters, setEnemyCharacters)\n                setTimeout(() => {\n                    timeout3 = enemy3.takeTurn(playerCharacters, setPlayerCharacters, enemyCharacters, setEnemyCharacters)\n                    setTimeout(() => setCurrentPhase(\"characterTurnSelect\"), (timeout3 + 500))\n                }, (timeout2))\n            }, timeout)\n        }\n        console.log(\"playerssssss\", playerCharacters);\n        console.log(\"currentPhase\", currentPhase)\n\n        if ( playerCharacters.meleePlayer.healthPoints <= 0 && playerCharacters.magicPlayer.healthPoints <= 0 && playerCharacters.healerPlayer.healthPoints <= 0 ){\n            console.log(\"GAME OVER!!!\")\n        } else if ( enemyCharacters.enemy1.healthPoints <= 0 && enemyCharacters.enemy2.healthPoints <= 0 && enemyCharacters.enemy3.healthPoints <= 0 ){\n            console.log(\"YOU WIN!!!\")\n        }\n    }, [currentPhase])\n\n\n    const calculateMovementLocations = (startingPosition, numberOfStepsAllowed) => {\n\n        const movableLocations = []\n        movableLocations.push(startingPosition)\n\n        for (let i = 1; i <= numberOfStepsAllowed; i++){\n            movableLocations.forEach( movableLocation => {\n                const currentRow = Math.ceil(movableLocation / boardWidth)\n                // if ((movableLocation + boardWidth) < (boardWidth * boardHeight) && !movableLocations.includes(movableLocation + boardWidth)) movableLocations.push(movableLocation + boardWidth)\n                if ((movableLocation + boardWidth) < (boardWidth * boardHeight)) {\n                    if (!movableLocations.includes(movableLocation + boardWidth)) movableLocations.push(movableLocation + boardWidth)\n                } \n                if ((movableLocation - boardWidth) > 0) {\n                    if (!movableLocations.includes(movableLocation - boardWidth)) movableLocations.push(movableLocation - boardWidth)\n                }\n                const nextSquareRow = Math.ceil(((movableLocation + 1) / boardWidth))\n                if (nextSquareRow === currentRow) {\n                    if (!movableLocations.includes(movableLocation + 1)) movableLocations.push(movableLocation + 1)\n                }\n                const previousSquareRow = Math.ceil(((movableLocation - 1) / boardWidth))\n                if (previousSquareRow === currentRow) {\n                    if (!movableLocations.includes(movableLocation - 1)) movableLocations.push(movableLocation - 1)\n                }\n            })\n        }\n        setMovableSquares(movableLocations)\n    }\n\n    const calculateAttackLocations = (characterToAttack, attackRange) => {\n        const currentPosition = playerCharacters[characterToAttack][\"position\"]\n        const currentRow = Math.ceil(currentPosition / boardWidth)\n        const attackableLocations = []\n\n        for (let i = 1 ; i <= attackRange ; i++) {\n            if( currentPosition + (i * 5) < boardWidth * boardHeight ) attackableLocations.push(currentPosition + (i * 5))\n            if( currentPosition - (i * 5) > 0 ) attackableLocations.push(currentPosition - (i * 5))\n            if( Math.ceil((currentPosition + (i * 1)) / boardWidth) === currentRow ) attackableLocations.push(currentPosition + (i * 1))\n            if( Math.ceil((currentPosition - (i * 1)) / boardWidth) === currentRow ) attackableLocations.push(currentPosition - (i * 1))\n        }\n        setAttackableSquares(attackableLocations)\n    }\n\n    const handleImageClick = (character) => {\n        setModalIsOpen(true)\n        setModalCharacter(character)\n    }\n\n    const displayStatusEffects = (clickedCharacter) => {\n        const display = clickedCharacter.statusEffects.map(statusEffect => {\n            return statusEffect.effect + 'x' + statusEffect.duration\n        })\n        const finished = display.join(\", \")\n        return <p>status: {finished}</p>\n    }\n\n    return (\n        <div>\n            <p>GameScreen</p>\n            <GameBoard \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter}\n                currentPhase={currentPhase}\n                setCurrentPhase={setCurrentPhase}\n                movableSquares={movableSquares}\n                attackableSquares={attackableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                enemyCharacters={enemyCharacters}\n                setEnemyCharacters={setEnemyCharacters}\n                handleImageClick={handleImageClick}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n                setAttackableSquares={setAttackableSquares}\n                displayStatusEffects={displayStatusEffects}\n            />\n            <GameActionBar \n                selectedCharacter={selectedCharacter}\n                setSelectedCharacter={setSelectedCharacter} \n                currentPhase={currentPhase} \n                setCurrentPhase={setCurrentPhase}\n                calculateMovementLocations={calculateMovementLocations}\n                calculateAttackLocations={calculateAttackLocations}\n                setMovableSquares={setMovableSquares}\n                setAttackableSquares={setAttackableSquares}\n                playerCharacters={playerCharacters}\n                setPlayerCharacters={setPlayerCharacters}\n                enemyMovementPhase={enemyMovementPhase}\n                setEnemyMovementPhase={setEnemyMovementPhase}\n                usedCharacters={usedCharacters}\n                setUsedCharacters={setUsedCharacters}\n            />\n            {modalCharacter && \n            <CharacterInfoModal\n                modalIsOpen={modalIsOpen}\n                setModalIsOpen={setModalIsOpen}\n                modalCharacter={modalCharacter}\n                displayStatusEffects={displayStatusEffects}\n            />}\n            {/* {modalCharacter && <Modal\n                className=\"modal-container\"\n                appElement={document.getElementById('root')}\n                isOpen={modalIsOpen}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(0,0,0,0.7)'\n                    }\n                }}\n            >\n                <button className=\"modal-close-button\" onClick={() => setModalIsOpen(false)}>\n\t\t\t\t\tClose\n\t\t\t\t</button>\n                <p>{modalCharacter.name}</p>\n                <p>Attack: {modalCharacter.attackPoints}</p>\n                <p>Health: {modalCharacter.healthPoints}</p>\n                <p>status: {modalCharacter.statusEffects[0] ? modalCharacter.statusEffects[0].effect : \"\"}</p>\n                {displayStatusEffects()}\n            </Modal>} */}\n        </div>\n    )\n}\n\nexport default GameScreen\n","/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameActionBar.js",["100","101"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameBoard.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/GameSquare.js",["102","103"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/boardImages.js",[],["104","105"],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/MovementPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Character.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Enemy.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleePlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/meleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MeleeWeapon.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/AttackPhase.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterTurnSelect.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/assets/WeaponImages.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Spell.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/HealerPlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/MagicPlayer.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/EquipModal.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/models/Heal.js",[],"/Users/chrisfraser/projects/react_RPG/react_rpg/src/components/CharacterInfoModal.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":107,"column":8,"nodeType":"112","endLine":107,"endColumn":22,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":85,"column":8,"nodeType":"112","endLine":85,"endColumn":27,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":142,"column":21,"nodeType":"118","endLine":142,"endColumn":99},{"ruleId":"110","severity":1,"message":"119","line":78,"column":8,"nodeType":"112","endLine":78,"endColumn":43,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":127,"column":8,"nodeType":"112","endLine":127,"endColumn":75,"suggestions":"122"},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enemy1', 'enemy2', 'enemy3', 'enemyCharacters', and 'playerCharacters'. Either include them or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'playerCharacters'. Either include it or remove the dependency array.",["128"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'squareNumber'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has missing dependencies: 'enemyCharacters', 'image', 'selectedCharacter', and 'squareNumber'. Either include them or remove the dependency array.",["130"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",{"range":"139","text":"140"},"Update the dependencies array to be: [playerCharacters, selectedCharacter]",{"range":"141","text":"142"},"Update the dependencies array to be: [playerCharacters, enemyCharacters, squareNumber]",{"range":"143","text":"144"},"Update the dependencies array to be: [movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]",{"range":"145","text":"146"},[4478,4492],"[currentPhase, enemy1, enemy2, enemy3, enemyCharacters, playerCharacters]",[2913,2932],"[playerCharacters, selectedCharacter]",[2710,2745],"[playerCharacters, enemyCharacters, squareNumber]",[5173,5240],"[movableSquares, attackableSquares, playerCharacters, currentPhase, selectedCharacter, image, squareNumber, enemyCharacters]"]